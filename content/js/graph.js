/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 138.0, "minX": 0.0, "maxY": 9816.0, "series": [{"data": [[0.0, 180.0], [0.1, 181.0], [0.2, 181.0], [0.3, 182.0], [0.4, 183.0], [0.5, 184.0], [0.6, 185.0], [0.7, 186.0], [0.8, 188.0], [0.9, 189.0], [1.0, 189.0], [1.1, 190.0], [1.2, 191.0], [1.3, 191.0], [1.4, 191.0], [1.5, 192.0], [1.6, 192.0], [1.7, 192.0], [1.8, 193.0], [1.9, 194.0], [2.0, 194.0], [2.1, 195.0], [2.2, 195.0], [2.3, 195.0], [2.4, 196.0], [2.5, 196.0], [2.6, 196.0], [2.7, 197.0], [2.8, 197.0], [2.9, 197.0], [3.0, 198.0], [3.1, 198.0], [3.2, 198.0], [3.3, 198.0], [3.4, 199.0], [3.5, 199.0], [3.6, 199.0], [3.7, 199.0], [3.8, 199.0], [3.9, 199.0], [4.0, 199.0], [4.1, 200.0], [4.2, 200.0], [4.3, 200.0], [4.4, 200.0], [4.5, 200.0], [4.6, 200.0], [4.7, 200.0], [4.8, 201.0], [4.9, 201.0], [5.0, 201.0], [5.1, 201.0], [5.2, 201.0], [5.3, 201.0], [5.4, 201.0], [5.5, 201.0], [5.6, 201.0], [5.7, 201.0], [5.8, 202.0], [5.9, 202.0], [6.0, 202.0], [6.1, 202.0], [6.2, 202.0], [6.3, 202.0], [6.4, 202.0], [6.5, 202.0], [6.6, 202.0], [6.7, 203.0], [6.8, 203.0], [6.9, 203.0], [7.0, 203.0], [7.1, 203.0], [7.2, 203.0], [7.3, 203.0], [7.4, 203.0], [7.5, 203.0], [7.6, 203.0], [7.7, 203.0], [7.8, 203.0], [7.9, 204.0], [8.0, 204.0], [8.1, 204.0], [8.2, 204.0], [8.3, 204.0], [8.4, 204.0], [8.5, 204.0], [8.6, 204.0], [8.7, 204.0], [8.8, 204.0], [8.9, 204.0], [9.0, 205.0], [9.1, 205.0], [9.2, 205.0], [9.3, 205.0], [9.4, 205.0], [9.5, 205.0], [9.6, 205.0], [9.7, 205.0], [9.8, 205.0], [9.9, 205.0], [10.0, 205.0], [10.1, 205.0], [10.2, 206.0], [10.3, 206.0], [10.4, 206.0], [10.5, 206.0], [10.6, 206.0], [10.7, 206.0], [10.8, 206.0], [10.9, 206.0], [11.0, 206.0], [11.1, 206.0], [11.2, 206.0], [11.3, 206.0], [11.4, 207.0], [11.5, 207.0], [11.6, 207.0], [11.7, 207.0], [11.8, 207.0], [11.9, 207.0], [12.0, 207.0], [12.1, 207.0], [12.2, 207.0], [12.3, 207.0], [12.4, 207.0], [12.5, 207.0], [12.6, 207.0], [12.7, 207.0], [12.8, 207.0], [12.9, 207.0], [13.0, 207.0], [13.1, 208.0], [13.2, 208.0], [13.3, 208.0], [13.4, 208.0], [13.5, 208.0], [13.6, 208.0], [13.7, 208.0], [13.8, 208.0], [13.9, 208.0], [14.0, 208.0], [14.1, 208.0], [14.2, 208.0], [14.3, 208.0], [14.4, 208.0], [14.5, 208.0], [14.6, 208.0], [14.7, 208.0], [14.8, 208.0], [14.9, 208.0], [15.0, 209.0], [15.1, 209.0], [15.2, 209.0], [15.3, 209.0], [15.4, 209.0], [15.5, 209.0], [15.6, 209.0], [15.7, 209.0], [15.8, 209.0], [15.9, 209.0], [16.0, 209.0], [16.1, 209.0], [16.2, 209.0], [16.3, 210.0], [16.4, 210.0], [16.5, 210.0], [16.6, 210.0], [16.7, 210.0], [16.8, 210.0], [16.9, 210.0], [17.0, 210.0], [17.1, 210.0], [17.2, 210.0], [17.3, 210.0], [17.4, 210.0], [17.5, 210.0], [17.6, 210.0], [17.7, 211.0], [17.8, 211.0], [17.9, 211.0], [18.0, 211.0], [18.1, 211.0], [18.2, 211.0], [18.3, 211.0], [18.4, 211.0], [18.5, 211.0], [18.6, 211.0], [18.7, 211.0], [18.8, 211.0], [18.9, 211.0], [19.0, 211.0], [19.1, 211.0], [19.2, 211.0], [19.3, 211.0], [19.4, 212.0], [19.5, 212.0], [19.6, 212.0], [19.7, 212.0], [19.8, 212.0], [19.9, 212.0], [20.0, 212.0], [20.1, 212.0], [20.2, 212.0], [20.3, 212.0], [20.4, 212.0], [20.5, 212.0], [20.6, 212.0], [20.7, 213.0], [20.8, 213.0], [20.9, 213.0], [21.0, 213.0], [21.1, 213.0], [21.2, 213.0], [21.3, 213.0], [21.4, 213.0], [21.5, 213.0], [21.6, 213.0], [21.7, 213.0], [21.8, 213.0], [21.9, 213.0], [22.0, 213.0], [22.1, 213.0], [22.2, 213.0], [22.3, 213.0], [22.4, 213.0], [22.5, 213.0], [22.6, 213.0], [22.7, 213.0], [22.8, 214.0], [22.9, 214.0], [23.0, 214.0], [23.1, 214.0], [23.2, 214.0], [23.3, 214.0], [23.4, 214.0], [23.5, 214.0], [23.6, 214.0], [23.7, 214.0], [23.8, 214.0], [23.9, 214.0], [24.0, 214.0], [24.1, 214.0], [24.2, 214.0], [24.3, 214.0], [24.4, 214.0], [24.5, 214.0], [24.6, 214.0], [24.7, 215.0], [24.8, 215.0], [24.9, 215.0], [25.0, 215.0], [25.1, 215.0], [25.2, 215.0], [25.3, 215.0], [25.4, 215.0], [25.5, 215.0], [25.6, 215.0], [25.7, 215.0], [25.8, 215.0], [25.9, 215.0], [26.0, 215.0], [26.1, 215.0], [26.2, 215.0], [26.3, 215.0], [26.4, 215.0], [26.5, 215.0], [26.6, 215.0], [26.7, 215.0], [26.8, 215.0], [26.9, 216.0], [27.0, 216.0], [27.1, 216.0], [27.2, 216.0], [27.3, 216.0], [27.4, 216.0], [27.5, 216.0], [27.6, 216.0], [27.7, 216.0], [27.8, 216.0], [27.9, 216.0], [28.0, 216.0], [28.1, 216.0], [28.2, 216.0], [28.3, 216.0], [28.4, 216.0], [28.5, 216.0], [28.6, 216.0], [28.7, 216.0], [28.8, 217.0], [28.9, 217.0], [29.0, 217.0], [29.1, 217.0], [29.2, 217.0], [29.3, 217.0], [29.4, 217.0], [29.5, 217.0], [29.6, 217.0], [29.7, 217.0], [29.8, 217.0], [29.9, 217.0], [30.0, 217.0], [30.1, 218.0], [30.2, 218.0], [30.3, 218.0], [30.4, 218.0], [30.5, 218.0], [30.6, 218.0], [30.7, 218.0], [30.8, 218.0], [30.9, 218.0], [31.0, 218.0], [31.1, 218.0], [31.2, 218.0], [31.3, 218.0], [31.4, 218.0], [31.5, 218.0], [31.6, 218.0], [31.7, 218.0], [31.8, 218.0], [31.9, 218.0], [32.0, 218.0], [32.1, 218.0], [32.2, 219.0], [32.3, 219.0], [32.4, 219.0], [32.5, 219.0], [32.6, 219.0], [32.7, 219.0], [32.8, 219.0], [32.9, 219.0], [33.0, 219.0], [33.1, 219.0], [33.2, 219.0], [33.3, 219.0], [33.4, 219.0], [33.5, 219.0], [33.6, 220.0], [33.7, 220.0], [33.8, 220.0], [33.9, 220.0], [34.0, 220.0], [34.1, 220.0], [34.2, 220.0], [34.3, 220.0], [34.4, 220.0], [34.5, 220.0], [34.6, 220.0], [34.7, 220.0], [34.8, 220.0], [34.9, 220.0], [35.0, 220.0], [35.1, 220.0], [35.2, 220.0], [35.3, 220.0], [35.4, 220.0], [35.5, 221.0], [35.6, 221.0], [35.7, 221.0], [35.8, 221.0], [35.9, 221.0], [36.0, 221.0], [36.1, 221.0], [36.2, 221.0], [36.3, 221.0], [36.4, 221.0], [36.5, 221.0], [36.6, 221.0], [36.7, 221.0], [36.8, 221.0], [36.9, 221.0], [37.0, 221.0], [37.1, 221.0], [37.2, 221.0], [37.3, 222.0], [37.4, 222.0], [37.5, 222.0], [37.6, 222.0], [37.7, 222.0], [37.8, 222.0], [37.9, 222.0], [38.0, 222.0], [38.1, 222.0], [38.2, 222.0], [38.3, 222.0], [38.4, 222.0], [38.5, 222.0], [38.6, 222.0], [38.7, 222.0], [38.8, 222.0], [38.9, 222.0], [39.0, 222.0], [39.1, 222.0], [39.2, 222.0], [39.3, 222.0], [39.4, 223.0], [39.5, 223.0], [39.6, 223.0], [39.7, 223.0], [39.8, 223.0], [39.9, 223.0], [40.0, 223.0], [40.1, 223.0], [40.2, 223.0], [40.3, 223.0], [40.4, 223.0], [40.5, 223.0], [40.6, 223.0], [40.7, 223.0], [40.8, 223.0], [40.9, 223.0], [41.0, 223.0], [41.1, 223.0], [41.2, 224.0], [41.3, 224.0], [41.4, 224.0], [41.5, 224.0], [41.6, 224.0], [41.7, 224.0], [41.8, 224.0], [41.9, 224.0], [42.0, 224.0], [42.1, 224.0], [42.2, 224.0], [42.3, 224.0], [42.4, 224.0], [42.5, 224.0], [42.6, 224.0], [42.7, 224.0], [42.8, 224.0], [42.9, 224.0], [43.0, 224.0], [43.1, 224.0], [43.2, 224.0], [43.3, 224.0], [43.4, 224.0], [43.5, 225.0], [43.6, 225.0], [43.7, 225.0], [43.8, 225.0], [43.9, 225.0], [44.0, 225.0], [44.1, 225.0], [44.2, 225.0], [44.3, 225.0], [44.4, 225.0], [44.5, 225.0], [44.6, 225.0], [44.7, 225.0], [44.8, 225.0], [44.9, 225.0], [45.0, 225.0], [45.1, 226.0], [45.2, 226.0], [45.3, 226.0], [45.4, 226.0], [45.5, 226.0], [45.6, 226.0], [45.7, 226.0], [45.8, 226.0], [45.9, 226.0], [46.0, 226.0], [46.1, 226.0], [46.2, 226.0], [46.3, 226.0], [46.4, 226.0], [46.5, 226.0], [46.6, 227.0], [46.7, 227.0], [46.8, 227.0], [46.9, 227.0], [47.0, 227.0], [47.1, 227.0], [47.2, 227.0], [47.3, 227.0], [47.4, 227.0], [47.5, 227.0], [47.6, 227.0], [47.7, 227.0], [47.8, 227.0], [47.9, 228.0], [48.0, 228.0], [48.1, 228.0], [48.2, 228.0], [48.3, 228.0], [48.4, 228.0], [48.5, 228.0], [48.6, 228.0], [48.7, 228.0], [48.8, 228.0], [48.9, 228.0], [49.0, 228.0], [49.1, 228.0], [49.2, 228.0], [49.3, 228.0], [49.4, 228.0], [49.5, 228.0], [49.6, 228.0], [49.7, 228.0], [49.8, 228.0], [49.9, 228.0], [50.0, 228.0], [50.1, 228.0], [50.2, 228.0], [50.3, 229.0], [50.4, 229.0], [50.5, 229.0], [50.6, 229.0], [50.7, 229.0], [50.8, 229.0], [50.9, 229.0], [51.0, 229.0], [51.1, 229.0], [51.2, 229.0], [51.3, 229.0], [51.4, 229.0], [51.5, 229.0], [51.6, 229.0], [51.7, 229.0], [51.8, 229.0], [51.9, 229.0], [52.0, 229.0], [52.1, 230.0], [52.2, 230.0], [52.3, 230.0], [52.4, 230.0], [52.5, 230.0], [52.6, 230.0], [52.7, 230.0], [52.8, 230.0], [52.9, 230.0], [53.0, 230.0], [53.1, 230.0], [53.2, 230.0], [53.3, 230.0], [53.4, 230.0], [53.5, 230.0], [53.6, 230.0], [53.7, 230.0], [53.8, 230.0], [53.9, 230.0], [54.0, 230.0], [54.1, 230.0], [54.2, 230.0], [54.3, 231.0], [54.4, 231.0], [54.5, 231.0], [54.6, 231.0], [54.7, 231.0], [54.8, 231.0], [54.9, 231.0], [55.0, 231.0], [55.1, 231.0], [55.2, 231.0], [55.3, 231.0], [55.4, 231.0], [55.5, 231.0], [55.6, 231.0], [55.7, 231.0], [55.8, 231.0], [55.9, 231.0], [56.0, 231.0], [56.1, 232.0], [56.2, 232.0], [56.3, 232.0], [56.4, 232.0], [56.5, 232.0], [56.6, 232.0], [56.7, 232.0], [56.8, 232.0], [56.9, 232.0], [57.0, 232.0], [57.1, 232.0], [57.2, 232.0], [57.3, 232.0], [57.4, 232.0], [57.5, 232.0], [57.6, 232.0], [57.7, 232.0], [57.8, 232.0], [57.9, 232.0], [58.0, 232.0], [58.1, 232.0], [58.2, 232.0], [58.3, 233.0], [58.4, 233.0], [58.5, 233.0], [58.6, 233.0], [58.7, 233.0], [58.8, 233.0], [58.9, 233.0], [59.0, 233.0], [59.1, 233.0], [59.2, 233.0], [59.3, 233.0], [59.4, 233.0], [59.5, 233.0], [59.6, 233.0], [59.7, 233.0], [59.8, 233.0], [59.9, 233.0], [60.0, 233.0], [60.1, 234.0], [60.2, 234.0], [60.3, 234.0], [60.4, 234.0], [60.5, 234.0], [60.6, 234.0], [60.7, 234.0], [60.8, 234.0], [60.9, 234.0], [61.0, 234.0], [61.1, 234.0], [61.2, 235.0], [61.3, 235.0], [61.4, 235.0], [61.5, 235.0], [61.6, 235.0], [61.7, 235.0], [61.8, 235.0], [61.9, 235.0], [62.0, 235.0], [62.1, 235.0], [62.2, 235.0], [62.3, 235.0], [62.4, 235.0], [62.5, 235.0], [62.6, 236.0], [62.7, 236.0], [62.8, 236.0], [62.9, 236.0], [63.0, 236.0], [63.1, 236.0], [63.2, 236.0], [63.3, 236.0], [63.4, 236.0], [63.5, 236.0], [63.6, 236.0], [63.7, 236.0], [63.8, 236.0], [63.9, 236.0], [64.0, 236.0], [64.1, 236.0], [64.2, 236.0], [64.3, 237.0], [64.4, 237.0], [64.5, 237.0], [64.6, 237.0], [64.7, 237.0], [64.8, 237.0], [64.9, 237.0], [65.0, 237.0], [65.1, 237.0], [65.2, 237.0], [65.3, 237.0], [65.4, 237.0], [65.5, 237.0], [65.6, 237.0], [65.7, 237.0], [65.8, 238.0], [65.9, 238.0], [66.0, 238.0], [66.1, 238.0], [66.2, 238.0], [66.3, 238.0], [66.4, 238.0], [66.5, 238.0], [66.6, 238.0], [66.7, 238.0], [66.8, 238.0], [66.9, 238.0], [67.0, 238.0], [67.1, 238.0], [67.2, 239.0], [67.3, 239.0], [67.4, 239.0], [67.5, 239.0], [67.6, 239.0], [67.7, 239.0], [67.8, 239.0], [67.9, 239.0], [68.0, 239.0], [68.1, 239.0], [68.2, 239.0], [68.3, 239.0], [68.4, 239.0], [68.5, 239.0], [68.6, 239.0], [68.7, 239.0], [68.8, 240.0], [68.9, 240.0], [69.0, 240.0], [69.1, 240.0], [69.2, 240.0], [69.3, 240.0], [69.4, 240.0], [69.5, 240.0], [69.6, 240.0], [69.7, 240.0], [69.8, 240.0], [69.9, 240.0], [70.0, 241.0], [70.1, 241.0], [70.2, 241.0], [70.3, 241.0], [70.4, 241.0], [70.5, 241.0], [70.6, 241.0], [70.7, 241.0], [70.8, 241.0], [70.9, 241.0], [71.0, 241.0], [71.1, 241.0], [71.2, 242.0], [71.3, 242.0], [71.4, 242.0], [71.5, 242.0], [71.6, 242.0], [71.7, 242.0], [71.8, 242.0], [71.9, 242.0], [72.0, 242.0], [72.1, 242.0], [72.2, 242.0], [72.3, 242.0], [72.4, 243.0], [72.5, 243.0], [72.6, 243.0], [72.7, 243.0], [72.8, 243.0], [72.9, 243.0], [73.0, 243.0], [73.1, 243.0], [73.2, 243.0], [73.3, 244.0], [73.4, 244.0], [73.5, 244.0], [73.6, 244.0], [73.7, 244.0], [73.8, 244.0], [73.9, 244.0], [74.0, 244.0], [74.1, 244.0], [74.2, 245.0], [74.3, 245.0], [74.4, 245.0], [74.5, 245.0], [74.6, 245.0], [74.7, 245.0], [74.8, 245.0], [74.9, 245.0], [75.0, 245.0], [75.1, 246.0], [75.2, 246.0], [75.3, 246.0], [75.4, 246.0], [75.5, 246.0], [75.6, 246.0], [75.7, 246.0], [75.8, 247.0], [75.9, 247.0], [76.0, 247.0], [76.1, 247.0], [76.2, 247.0], [76.3, 247.0], [76.4, 247.0], [76.5, 247.0], [76.6, 247.0], [76.7, 247.0], [76.8, 247.0], [76.9, 247.0], [77.0, 248.0], [77.1, 248.0], [77.2, 248.0], [77.3, 248.0], [77.4, 248.0], [77.5, 248.0], [77.6, 248.0], [77.7, 249.0], [77.8, 249.0], [77.9, 249.0], [78.0, 249.0], [78.1, 249.0], [78.2, 249.0], [78.3, 249.0], [78.4, 249.0], [78.5, 249.0], [78.6, 249.0], [78.7, 250.0], [78.8, 250.0], [78.9, 250.0], [79.0, 250.0], [79.1, 250.0], [79.2, 250.0], [79.3, 250.0], [79.4, 250.0], [79.5, 250.0], [79.6, 250.0], [79.7, 250.0], [79.8, 251.0], [79.9, 251.0], [80.0, 251.0], [80.1, 251.0], [80.2, 251.0], [80.3, 251.0], [80.4, 251.0], [80.5, 251.0], [80.6, 251.0], [80.7, 251.0], [80.8, 251.0], [80.9, 251.0], [81.0, 252.0], [81.1, 252.0], [81.2, 252.0], [81.3, 252.0], [81.4, 252.0], [81.5, 252.0], [81.6, 252.0], [81.7, 252.0], [81.8, 252.0], [81.9, 253.0], [82.0, 253.0], [82.1, 253.0], [82.2, 253.0], [82.3, 253.0], [82.4, 253.0], [82.5, 254.0], [82.6, 254.0], [82.7, 254.0], [82.8, 254.0], [82.9, 254.0], [83.0, 254.0], [83.1, 254.0], [83.2, 254.0], [83.3, 254.0], [83.4, 254.0], [83.5, 255.0], [83.6, 255.0], [83.7, 255.0], [83.8, 256.0], [83.9, 256.0], [84.0, 256.0], [84.1, 256.0], [84.2, 256.0], [84.3, 257.0], [84.4, 257.0], [84.5, 257.0], [84.6, 257.0], [84.7, 257.0], [84.8, 258.0], [84.9, 258.0], [85.0, 258.0], [85.1, 258.0], [85.2, 258.0], [85.3, 258.0], [85.4, 259.0], [85.5, 259.0], [85.6, 259.0], [85.7, 259.0], [85.8, 260.0], [85.9, 260.0], [86.0, 260.0], [86.1, 260.0], [86.2, 261.0], [86.3, 261.0], [86.4, 261.0], [86.5, 261.0], [86.6, 261.0], [86.7, 261.0], [86.8, 262.0], [86.9, 262.0], [87.0, 262.0], [87.1, 262.0], [87.2, 263.0], [87.3, 263.0], [87.4, 264.0], [87.5, 264.0], [87.6, 264.0], [87.7, 265.0], [87.8, 265.0], [87.9, 266.0], [88.0, 267.0], [88.1, 267.0], [88.2, 268.0], [88.3, 268.0], [88.4, 268.0], [88.5, 268.0], [88.6, 269.0], [88.7, 269.0], [88.8, 269.0], [88.9, 270.0], [89.0, 270.0], [89.1, 270.0], [89.2, 271.0], [89.3, 271.0], [89.4, 271.0], [89.5, 272.0], [89.6, 272.0], [89.7, 272.0], [89.8, 273.0], [89.9, 273.0], [90.0, 273.0], [90.1, 274.0], [90.2, 274.0], [90.3, 274.0], [90.4, 275.0], [90.5, 276.0], [90.6, 276.0], [90.7, 278.0], [90.8, 278.0], [90.9, 279.0], [91.0, 280.0], [91.1, 281.0], [91.2, 281.0], [91.3, 282.0], [91.4, 283.0], [91.5, 284.0], [91.6, 284.0], [91.7, 284.0], [91.8, 286.0], [91.9, 287.0], [92.0, 288.0], [92.1, 289.0], [92.2, 292.0], [92.3, 292.0], [92.4, 293.0], [92.5, 295.0], [92.6, 296.0], [92.7, 296.0], [92.8, 298.0], [92.9, 299.0], [93.0, 300.0], [93.1, 300.0], [93.2, 301.0], [93.3, 301.0], [93.4, 303.0], [93.5, 306.0], [93.6, 309.0], [93.7, 310.0], [93.8, 311.0], [93.9, 312.0], [94.0, 316.0], [94.1, 316.0], [94.2, 317.0], [94.3, 319.0], [94.4, 320.0], [94.5, 324.0], [94.6, 327.0], [94.7, 327.0], [94.8, 332.0], [94.9, 332.0], [95.0, 333.0], [95.1, 343.0], [95.2, 346.0], [95.3, 352.0], [95.4, 354.0], [95.5, 359.0], [95.6, 366.0], [95.7, 367.0], [95.8, 370.0], [95.9, 371.0], [96.0, 375.0], [96.1, 388.0], [96.2, 393.0], [96.3, 398.0], [96.4, 399.0], [96.5, 403.0], [96.6, 410.0], [96.7, 412.0], [96.8, 419.0], [96.9, 422.0], [97.0, 424.0], [97.1, 427.0], [97.2, 428.0], [97.3, 430.0], [97.4, 435.0], [97.5, 444.0], [97.6, 458.0], [97.7, 460.0], [97.8, 540.0], [97.9, 547.0], [98.0, 556.0], [98.1, 577.0], [98.2, 580.0], [98.3, 599.0], [98.4, 600.0], [98.5, 608.0], [98.6, 613.0], [98.7, 615.0], [98.8, 634.0], [98.9, 653.0], [99.0, 663.0], [99.1, 693.0], [99.2, 712.0], [99.3, 748.0], [99.4, 791.0], [99.5, 943.0], [99.6, 1062.0], [99.7, 1103.0], [99.8, 1387.0], [99.9, 1605.0], [100.0, 6628.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[0.0, 464.0], [0.1, 466.0], [0.2, 470.0], [0.3, 471.0], [0.4, 471.0], [0.5, 471.0], [0.6, 472.0], [0.7, 474.0], [0.8, 474.0], [0.9, 475.0], [1.0, 476.0], [1.1, 476.0], [1.2, 477.0], [1.3, 478.0], [1.4, 480.0], [1.5, 480.0], [1.6, 480.0], [1.7, 482.0], [1.8, 482.0], [1.9, 482.0], [2.0, 483.0], [2.1, 484.0], [2.2, 484.0], [2.3, 485.0], [2.4, 485.0], [2.5, 486.0], [2.6, 487.0], [2.7, 487.0], [2.8, 488.0], [2.9, 488.0], [3.0, 488.0], [3.1, 488.0], [3.2, 489.0], [3.3, 490.0], [3.4, 490.0], [3.5, 490.0], [3.6, 490.0], [3.7, 491.0], [3.8, 491.0], [3.9, 492.0], [4.0, 492.0], [4.1, 492.0], [4.2, 492.0], [4.3, 493.0], [4.4, 493.0], [4.5, 493.0], [4.6, 494.0], [4.7, 494.0], [4.8, 494.0], [4.9, 495.0], [5.0, 495.0], [5.1, 495.0], [5.2, 496.0], [5.3, 497.0], [5.4, 497.0], [5.5, 497.0], [5.6, 497.0], [5.7, 498.0], [5.8, 499.0], [5.9, 500.0], [6.0, 501.0], [6.1, 501.0], [6.2, 502.0], [6.3, 502.0], [6.4, 502.0], [6.5, 503.0], [6.6, 504.0], [6.7, 504.0], [6.8, 504.0], [6.9, 505.0], [7.0, 505.0], [7.1, 506.0], [7.2, 506.0], [7.3, 506.0], [7.4, 507.0], [7.5, 507.0], [7.6, 508.0], [7.7, 508.0], [7.8, 508.0], [7.9, 509.0], [8.0, 509.0], [8.1, 509.0], [8.2, 509.0], [8.3, 510.0], [8.4, 511.0], [8.5, 511.0], [8.6, 511.0], [8.7, 511.0], [8.8, 512.0], [8.9, 512.0], [9.0, 512.0], [9.1, 513.0], [9.2, 513.0], [9.3, 513.0], [9.4, 513.0], [9.5, 513.0], [9.6, 514.0], [9.7, 514.0], [9.8, 514.0], [9.9, 514.0], [10.0, 514.0], [10.1, 514.0], [10.2, 514.0], [10.3, 515.0], [10.4, 515.0], [10.5, 515.0], [10.6, 515.0], [10.7, 515.0], [10.8, 516.0], [10.9, 516.0], [11.0, 516.0], [11.1, 516.0], [11.2, 516.0], [11.3, 516.0], [11.4, 516.0], [11.5, 517.0], [11.6, 517.0], [11.7, 517.0], [11.8, 517.0], [11.9, 517.0], [12.0, 517.0], [12.1, 517.0], [12.2, 517.0], [12.3, 517.0], [12.4, 517.0], [12.5, 518.0], [12.6, 518.0], [12.7, 518.0], [12.8, 518.0], [12.9, 518.0], [13.0, 518.0], [13.1, 518.0], [13.2, 518.0], [13.3, 519.0], [13.4, 519.0], [13.5, 519.0], [13.6, 519.0], [13.7, 519.0], [13.8, 519.0], [13.9, 519.0], [14.0, 519.0], [14.1, 519.0], [14.2, 519.0], [14.3, 519.0], [14.4, 519.0], [14.5, 520.0], [14.6, 520.0], [14.7, 520.0], [14.8, 520.0], [14.9, 520.0], [15.0, 520.0], [15.1, 520.0], [15.2, 520.0], [15.3, 520.0], [15.4, 520.0], [15.5, 520.0], [15.6, 520.0], [15.7, 520.0], [15.8, 521.0], [15.9, 521.0], [16.0, 521.0], [16.1, 521.0], [16.2, 521.0], [16.3, 521.0], [16.4, 521.0], [16.5, 521.0], [16.6, 522.0], [16.7, 522.0], [16.8, 522.0], [16.9, 522.0], [17.0, 522.0], [17.1, 522.0], [17.2, 522.0], [17.3, 522.0], [17.4, 522.0], [17.5, 522.0], [17.6, 522.0], [17.7, 522.0], [17.8, 523.0], [17.9, 523.0], [18.0, 523.0], [18.1, 523.0], [18.2, 523.0], [18.3, 523.0], [18.4, 523.0], [18.5, 523.0], [18.6, 523.0], [18.7, 523.0], [18.8, 523.0], [18.9, 523.0], [19.0, 524.0], [19.1, 524.0], [19.2, 524.0], [19.3, 524.0], [19.4, 524.0], [19.5, 524.0], [19.6, 524.0], [19.7, 524.0], [19.8, 524.0], [19.9, 524.0], [20.0, 524.0], [20.1, 524.0], [20.2, 524.0], [20.3, 524.0], [20.4, 525.0], [20.5, 525.0], [20.6, 525.0], [20.7, 525.0], [20.8, 525.0], [20.9, 525.0], [21.0, 525.0], [21.1, 525.0], [21.2, 525.0], [21.3, 525.0], [21.4, 525.0], [21.5, 525.0], [21.6, 526.0], [21.7, 526.0], [21.8, 526.0], [21.9, 526.0], [22.0, 526.0], [22.1, 526.0], [22.2, 526.0], [22.3, 526.0], [22.4, 526.0], [22.5, 526.0], [22.6, 526.0], [22.7, 526.0], [22.8, 526.0], [22.9, 526.0], [23.0, 527.0], [23.1, 527.0], [23.2, 527.0], [23.3, 527.0], [23.4, 527.0], [23.5, 527.0], [23.6, 527.0], [23.7, 527.0], [23.8, 527.0], [23.9, 527.0], [24.0, 527.0], [24.1, 527.0], [24.2, 527.0], [24.3, 527.0], [24.4, 527.0], [24.5, 527.0], [24.6, 528.0], [24.7, 528.0], [24.8, 528.0], [24.9, 528.0], [25.0, 528.0], [25.1, 528.0], [25.2, 528.0], [25.3, 528.0], [25.4, 528.0], [25.5, 528.0], [25.6, 528.0], [25.7, 528.0], [25.8, 528.0], [25.9, 528.0], [26.0, 528.0], [26.1, 528.0], [26.2, 528.0], [26.3, 528.0], [26.4, 528.0], [26.5, 529.0], [26.6, 529.0], [26.7, 529.0], [26.8, 529.0], [26.9, 529.0], [27.0, 529.0], [27.1, 529.0], [27.2, 529.0], [27.3, 529.0], [27.4, 529.0], [27.5, 529.0], [27.6, 529.0], [27.7, 529.0], [27.8, 529.0], [27.9, 529.0], [28.0, 529.0], [28.1, 530.0], [28.2, 530.0], [28.3, 530.0], [28.4, 530.0], [28.5, 530.0], [28.6, 530.0], [28.7, 530.0], [28.8, 530.0], [28.9, 530.0], [29.0, 530.0], [29.1, 530.0], [29.2, 530.0], [29.3, 530.0], [29.4, 530.0], [29.5, 530.0], [29.6, 530.0], [29.7, 531.0], [29.8, 531.0], [29.9, 531.0], [30.0, 531.0], [30.1, 531.0], [30.2, 531.0], [30.3, 531.0], [30.4, 531.0], [30.5, 531.0], [30.6, 531.0], [30.7, 531.0], [30.8, 532.0], [30.9, 532.0], [31.0, 532.0], [31.1, 532.0], [31.2, 532.0], [31.3, 532.0], [31.4, 532.0], [31.5, 532.0], [31.6, 532.0], [31.7, 532.0], [31.8, 532.0], [31.9, 532.0], [32.0, 532.0], [32.1, 532.0], [32.2, 532.0], [32.3, 533.0], [32.4, 533.0], [32.5, 533.0], [32.6, 533.0], [32.7, 533.0], [32.8, 533.0], [32.9, 533.0], [33.0, 533.0], [33.1, 533.0], [33.2, 533.0], [33.3, 533.0], [33.4, 533.0], [33.5, 534.0], [33.6, 534.0], [33.7, 534.0], [33.8, 534.0], [33.9, 534.0], [34.0, 534.0], [34.1, 534.0], [34.2, 534.0], [34.3, 534.0], [34.4, 534.0], [34.5, 534.0], [34.6, 534.0], [34.7, 535.0], [34.8, 535.0], [34.9, 535.0], [35.0, 535.0], [35.1, 535.0], [35.2, 535.0], [35.3, 535.0], [35.4, 535.0], [35.5, 535.0], [35.6, 535.0], [35.7, 536.0], [35.8, 536.0], [35.9, 536.0], [36.0, 536.0], [36.1, 536.0], [36.2, 537.0], [36.3, 537.0], [36.4, 537.0], [36.5, 537.0], [36.6, 537.0], [36.7, 537.0], [36.8, 537.0], [36.9, 537.0], [37.0, 538.0], [37.1, 538.0], [37.2, 538.0], [37.3, 538.0], [37.4, 538.0], [37.5, 538.0], [37.6, 538.0], [37.7, 538.0], [37.8, 538.0], [37.9, 538.0], [38.0, 538.0], [38.1, 538.0], [38.2, 538.0], [38.3, 539.0], [38.4, 539.0], [38.5, 539.0], [38.6, 539.0], [38.7, 539.0], [38.8, 539.0], [38.9, 539.0], [39.0, 539.0], [39.1, 539.0], [39.2, 539.0], [39.3, 539.0], [39.4, 540.0], [39.5, 540.0], [39.6, 540.0], [39.7, 540.0], [39.8, 540.0], [39.9, 540.0], [40.0, 540.0], [40.1, 540.0], [40.2, 540.0], [40.3, 541.0], [40.4, 541.0], [40.5, 541.0], [40.6, 541.0], [40.7, 541.0], [40.8, 541.0], [40.9, 541.0], [41.0, 541.0], [41.1, 541.0], [41.2, 542.0], [41.3, 542.0], [41.4, 542.0], [41.5, 542.0], [41.6, 542.0], [41.7, 542.0], [41.8, 542.0], [41.9, 542.0], [42.0, 542.0], [42.1, 542.0], [42.2, 543.0], [42.3, 543.0], [42.4, 543.0], [42.5, 543.0], [42.6, 543.0], [42.7, 543.0], [42.8, 544.0], [42.9, 544.0], [43.0, 544.0], [43.1, 544.0], [43.2, 544.0], [43.3, 544.0], [43.4, 544.0], [43.5, 544.0], [43.6, 545.0], [43.7, 545.0], [43.8, 545.0], [43.9, 545.0], [44.0, 545.0], [44.1, 545.0], [44.2, 545.0], [44.3, 546.0], [44.4, 546.0], [44.5, 546.0], [44.6, 546.0], [44.7, 546.0], [44.8, 546.0], [44.9, 546.0], [45.0, 547.0], [45.1, 547.0], [45.2, 547.0], [45.3, 547.0], [45.4, 547.0], [45.5, 547.0], [45.6, 547.0], [45.7, 547.0], [45.8, 547.0], [45.9, 547.0], [46.0, 548.0], [46.1, 548.0], [46.2, 548.0], [46.3, 548.0], [46.4, 548.0], [46.5, 548.0], [46.6, 548.0], [46.7, 548.0], [46.8, 548.0], [46.9, 548.0], [47.0, 549.0], [47.1, 549.0], [47.2, 549.0], [47.3, 549.0], [47.4, 549.0], [47.5, 549.0], [47.6, 549.0], [47.7, 549.0], [47.8, 550.0], [47.9, 550.0], [48.0, 550.0], [48.1, 550.0], [48.2, 550.0], [48.3, 550.0], [48.4, 550.0], [48.5, 550.0], [48.6, 550.0], [48.7, 550.0], [48.8, 551.0], [48.9, 551.0], [49.0, 551.0], [49.1, 551.0], [49.2, 551.0], [49.3, 551.0], [49.4, 551.0], [49.5, 551.0], [49.6, 551.0], [49.7, 552.0], [49.8, 552.0], [49.9, 552.0], [50.0, 552.0], [50.1, 552.0], [50.2, 553.0], [50.3, 553.0], [50.4, 553.0], [50.5, 553.0], [50.6, 553.0], [50.7, 553.0], [50.8, 553.0], [50.9, 553.0], [51.0, 553.0], [51.1, 554.0], [51.2, 554.0], [51.3, 554.0], [51.4, 554.0], [51.5, 554.0], [51.6, 554.0], [51.7, 554.0], [51.8, 554.0], [51.9, 555.0], [52.0, 555.0], [52.1, 555.0], [52.2, 555.0], [52.3, 556.0], [52.4, 556.0], [52.5, 556.0], [52.6, 556.0], [52.7, 556.0], [52.8, 556.0], [52.9, 556.0], [53.0, 557.0], [53.1, 557.0], [53.2, 557.0], [53.3, 557.0], [53.4, 557.0], [53.5, 558.0], [53.6, 558.0], [53.7, 558.0], [53.8, 558.0], [53.9, 558.0], [54.0, 559.0], [54.1, 559.0], [54.2, 559.0], [54.3, 559.0], [54.4, 559.0], [54.5, 559.0], [54.6, 559.0], [54.7, 559.0], [54.8, 560.0], [54.9, 560.0], [55.0, 560.0], [55.1, 560.0], [55.2, 561.0], [55.3, 561.0], [55.4, 561.0], [55.5, 561.0], [55.6, 562.0], [55.7, 562.0], [55.8, 562.0], [55.9, 562.0], [56.0, 562.0], [56.1, 562.0], [56.2, 562.0], [56.3, 562.0], [56.4, 563.0], [56.5, 563.0], [56.6, 563.0], [56.7, 563.0], [56.8, 563.0], [56.9, 564.0], [57.0, 564.0], [57.1, 564.0], [57.2, 565.0], [57.3, 565.0], [57.4, 565.0], [57.5, 566.0], [57.6, 566.0], [57.7, 566.0], [57.8, 566.0], [57.9, 567.0], [58.0, 567.0], [58.1, 567.0], [58.2, 567.0], [58.3, 567.0], [58.4, 567.0], [58.5, 567.0], [58.6, 568.0], [58.7, 568.0], [58.8, 568.0], [58.9, 568.0], [59.0, 569.0], [59.1, 569.0], [59.2, 569.0], [59.3, 570.0], [59.4, 570.0], [59.5, 570.0], [59.6, 570.0], [59.7, 570.0], [59.8, 571.0], [59.9, 571.0], [60.0, 571.0], [60.1, 571.0], [60.2, 571.0], [60.3, 572.0], [60.4, 572.0], [60.5, 572.0], [60.6, 573.0], [60.7, 573.0], [60.8, 573.0], [60.9, 574.0], [61.0, 574.0], [61.1, 574.0], [61.2, 574.0], [61.3, 574.0], [61.4, 575.0], [61.5, 575.0], [61.6, 575.0], [61.7, 575.0], [61.8, 575.0], [61.9, 575.0], [62.0, 575.0], [62.1, 575.0], [62.2, 576.0], [62.3, 576.0], [62.4, 576.0], [62.5, 576.0], [62.6, 577.0], [62.7, 577.0], [62.8, 577.0], [62.9, 577.0], [63.0, 577.0], [63.1, 577.0], [63.2, 577.0], [63.3, 578.0], [63.4, 578.0], [63.5, 579.0], [63.6, 579.0], [63.7, 579.0], [63.8, 580.0], [63.9, 581.0], [64.0, 581.0], [64.1, 581.0], [64.2, 582.0], [64.3, 582.0], [64.4, 582.0], [64.5, 582.0], [64.6, 583.0], [64.7, 583.0], [64.8, 583.0], [64.9, 583.0], [65.0, 584.0], [65.1, 584.0], [65.2, 585.0], [65.3, 586.0], [65.4, 586.0], [65.5, 586.0], [65.6, 586.0], [65.7, 587.0], [65.8, 587.0], [65.9, 587.0], [66.0, 587.0], [66.1, 588.0], [66.2, 588.0], [66.3, 588.0], [66.4, 588.0], [66.5, 588.0], [66.6, 589.0], [66.7, 589.0], [66.8, 589.0], [66.9, 589.0], [67.0, 589.0], [67.1, 589.0], [67.2, 590.0], [67.3, 590.0], [67.4, 590.0], [67.5, 590.0], [67.6, 591.0], [67.7, 591.0], [67.8, 591.0], [67.9, 592.0], [68.0, 593.0], [68.1, 594.0], [68.2, 594.0], [68.3, 594.0], [68.4, 595.0], [68.5, 596.0], [68.6, 596.0], [68.7, 597.0], [68.8, 597.0], [68.9, 597.0], [69.0, 598.0], [69.1, 599.0], [69.2, 599.0], [69.3, 599.0], [69.4, 599.0], [69.5, 600.0], [69.6, 600.0], [69.7, 601.0], [69.8, 602.0], [69.9, 603.0], [70.0, 603.0], [70.1, 604.0], [70.2, 604.0], [70.3, 604.0], [70.4, 604.0], [70.5, 605.0], [70.6, 605.0], [70.7, 606.0], [70.8, 606.0], [70.9, 606.0], [71.0, 606.0], [71.1, 607.0], [71.2, 607.0], [71.3, 608.0], [71.4, 608.0], [71.5, 609.0], [71.6, 609.0], [71.7, 609.0], [71.8, 610.0], [71.9, 610.0], [72.0, 610.0], [72.1, 610.0], [72.2, 610.0], [72.3, 611.0], [72.4, 611.0], [72.5, 612.0], [72.6, 613.0], [72.7, 614.0], [72.8, 614.0], [72.9, 615.0], [73.0, 615.0], [73.1, 615.0], [73.2, 616.0], [73.3, 617.0], [73.4, 617.0], [73.5, 617.0], [73.6, 617.0], [73.7, 618.0], [73.8, 618.0], [73.9, 618.0], [74.0, 619.0], [74.1, 619.0], [74.2, 620.0], [74.3, 620.0], [74.4, 620.0], [74.5, 622.0], [74.6, 622.0], [74.7, 622.0], [74.8, 623.0], [74.9, 623.0], [75.0, 623.0], [75.1, 624.0], [75.2, 624.0], [75.3, 626.0], [75.4, 626.0], [75.5, 627.0], [75.6, 627.0], [75.7, 627.0], [75.8, 628.0], [75.9, 629.0], [76.0, 629.0], [76.1, 630.0], [76.2, 630.0], [76.3, 631.0], [76.4, 631.0], [76.5, 632.0], [76.6, 632.0], [76.7, 633.0], [76.8, 633.0], [76.9, 634.0], [77.0, 634.0], [77.1, 634.0], [77.2, 635.0], [77.3, 636.0], [77.4, 636.0], [77.5, 637.0], [77.6, 637.0], [77.7, 637.0], [77.8, 639.0], [77.9, 639.0], [78.0, 640.0], [78.1, 640.0], [78.2, 641.0], [78.3, 641.0], [78.4, 641.0], [78.5, 642.0], [78.6, 643.0], [78.7, 643.0], [78.8, 643.0], [78.9, 644.0], [79.0, 644.0], [79.1, 644.0], [79.2, 645.0], [79.3, 646.0], [79.4, 646.0], [79.5, 647.0], [79.6, 647.0], [79.7, 647.0], [79.8, 648.0], [79.9, 648.0], [80.0, 648.0], [80.1, 648.0], [80.2, 648.0], [80.3, 649.0], [80.4, 649.0], [80.5, 651.0], [80.6, 651.0], [80.7, 652.0], [80.8, 653.0], [80.9, 654.0], [81.0, 654.0], [81.1, 655.0], [81.2, 655.0], [81.3, 655.0], [81.4, 656.0], [81.5, 656.0], [81.6, 657.0], [81.7, 657.0], [81.8, 658.0], [81.9, 658.0], [82.0, 660.0], [82.1, 660.0], [82.2, 661.0], [82.3, 662.0], [82.4, 662.0], [82.5, 663.0], [82.6, 663.0], [82.7, 664.0], [82.8, 666.0], [82.9, 667.0], [83.0, 667.0], [83.1, 667.0], [83.2, 668.0], [83.3, 668.0], [83.4, 669.0], [83.5, 669.0], [83.6, 670.0], [83.7, 670.0], [83.8, 671.0], [83.9, 672.0], [84.0, 673.0], [84.1, 674.0], [84.2, 675.0], [84.3, 676.0], [84.4, 676.0], [84.5, 678.0], [84.6, 679.0], [84.7, 680.0], [84.8, 681.0], [84.9, 681.0], [85.0, 683.0], [85.1, 684.0], [85.2, 684.0], [85.3, 686.0], [85.4, 687.0], [85.5, 688.0], [85.6, 689.0], [85.7, 690.0], [85.8, 693.0], [85.9, 694.0], [86.0, 695.0], [86.1, 695.0], [86.2, 696.0], [86.3, 697.0], [86.4, 697.0], [86.5, 698.0], [86.6, 699.0], [86.7, 700.0], [86.8, 701.0], [86.9, 702.0], [87.0, 703.0], [87.1, 704.0], [87.2, 704.0], [87.3, 705.0], [87.4, 706.0], [87.5, 706.0], [87.6, 708.0], [87.7, 709.0], [87.8, 710.0], [87.9, 710.0], [88.0, 711.0], [88.1, 711.0], [88.2, 712.0], [88.3, 713.0], [88.4, 715.0], [88.5, 715.0], [88.6, 717.0], [88.7, 719.0], [88.8, 720.0], [88.9, 721.0], [89.0, 721.0], [89.1, 723.0], [89.2, 724.0], [89.3, 727.0], [89.4, 729.0], [89.5, 732.0], [89.6, 735.0], [89.7, 736.0], [89.8, 738.0], [89.9, 739.0], [90.0, 741.0], [90.1, 742.0], [90.2, 744.0], [90.3, 745.0], [90.4, 747.0], [90.5, 748.0], [90.6, 749.0], [90.7, 750.0], [90.8, 753.0], [90.9, 753.0], [91.0, 755.0], [91.1, 755.0], [91.2, 756.0], [91.3, 761.0], [91.4, 762.0], [91.5, 763.0], [91.6, 764.0], [91.7, 765.0], [91.8, 767.0], [91.9, 769.0], [92.0, 769.0], [92.1, 770.0], [92.2, 771.0], [92.3, 773.0], [92.4, 774.0], [92.5, 774.0], [92.6, 775.0], [92.7, 775.0], [92.8, 777.0], [92.9, 779.0], [93.0, 781.0], [93.1, 782.0], [93.2, 782.0], [93.3, 784.0], [93.4, 788.0], [93.5, 791.0], [93.6, 792.0], [93.7, 794.0], [93.8, 796.0], [93.9, 796.0], [94.0, 797.0], [94.1, 804.0], [94.2, 806.0], [94.3, 808.0], [94.4, 809.0], [94.5, 809.0], [94.6, 813.0], [94.7, 814.0], [94.8, 817.0], [94.9, 818.0], [95.0, 819.0], [95.1, 821.0], [95.2, 824.0], [95.3, 828.0], [95.4, 832.0], [95.5, 834.0], [95.6, 836.0], [95.7, 838.0], [95.8, 842.0], [95.9, 843.0], [96.0, 845.0], [96.1, 848.0], [96.2, 850.0], [96.3, 855.0], [96.4, 858.0], [96.5, 860.0], [96.6, 861.0], [96.7, 868.0], [96.8, 876.0], [96.9, 881.0], [97.0, 883.0], [97.1, 885.0], [97.2, 886.0], [97.3, 892.0], [97.4, 899.0], [97.5, 902.0], [97.6, 904.0], [97.7, 908.0], [97.8, 912.0], [97.9, 913.0], [98.0, 922.0], [98.1, 927.0], [98.2, 937.0], [98.3, 946.0], [98.4, 947.0], [98.5, 960.0], [98.6, 968.0], [98.7, 973.0], [98.8, 1019.0], [98.9, 1040.0], [99.0, 1044.0], [99.1, 1076.0], [99.2, 1118.0], [99.3, 1143.0], [99.4, 1151.0], [99.5, 1181.0], [99.6, 1217.0], [99.7, 1300.0], [99.8, 1431.0], [99.9, 1476.0], [100.0, 1597.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[0.0, 138.0], [0.1, 139.0], [0.2, 139.0], [0.3, 140.0], [0.4, 140.0], [0.5, 140.0], [0.6, 140.0], [0.7, 141.0], [0.8, 141.0], [0.9, 141.0], [1.0, 141.0], [1.1, 141.0], [1.2, 141.0], [1.3, 142.0], [1.4, 142.0], [1.5, 142.0], [1.6, 142.0], [1.7, 142.0], [1.8, 142.0], [1.9, 143.0], [2.0, 143.0], [2.1, 143.0], [2.2, 143.0], [2.3, 143.0], [2.4, 143.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 143.0], [2.9, 143.0], [3.0, 143.0], [3.1, 143.0], [3.2, 143.0], [3.3, 143.0], [3.4, 143.0], [3.5, 143.0], [3.6, 143.0], [3.7, 144.0], [3.8, 144.0], [3.9, 144.0], [4.0, 144.0], [4.1, 144.0], [4.2, 144.0], [4.3, 144.0], [4.4, 144.0], [4.5, 144.0], [4.6, 144.0], [4.7, 144.0], [4.8, 144.0], [4.9, 144.0], [5.0, 144.0], [5.1, 144.0], [5.2, 144.0], [5.3, 144.0], [5.4, 144.0], [5.5, 144.0], [5.6, 144.0], [5.7, 144.0], [5.8, 144.0], [5.9, 144.0], [6.0, 144.0], [6.1, 145.0], [6.2, 145.0], [6.3, 145.0], [6.4, 145.0], [6.5, 145.0], [6.6, 145.0], [6.7, 145.0], [6.8, 145.0], [6.9, 145.0], [7.0, 145.0], [7.1, 145.0], [7.2, 145.0], [7.3, 145.0], [7.4, 145.0], [7.5, 145.0], [7.6, 145.0], [7.7, 145.0], [7.8, 145.0], [7.9, 145.0], [8.0, 145.0], [8.1, 146.0], [8.2, 146.0], [8.3, 146.0], [8.4, 146.0], [8.5, 146.0], [8.6, 146.0], [8.7, 146.0], [8.8, 146.0], [8.9, 146.0], [9.0, 146.0], [9.1, 146.0], [9.2, 146.0], [9.3, 146.0], [9.4, 146.0], [9.5, 146.0], [9.6, 146.0], [9.7, 146.0], [9.8, 146.0], [9.9, 146.0], [10.0, 146.0], [10.1, 146.0], [10.2, 146.0], [10.3, 146.0], [10.4, 146.0], [10.5, 146.0], [10.6, 146.0], [10.7, 146.0], [10.8, 146.0], [10.9, 146.0], [11.0, 146.0], [11.1, 146.0], [11.2, 146.0], [11.3, 146.0], [11.4, 146.0], [11.5, 147.0], [11.6, 147.0], [11.7, 147.0], [11.8, 147.0], [11.9, 147.0], [12.0, 147.0], [12.1, 147.0], [12.2, 147.0], [12.3, 147.0], [12.4, 147.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 147.0], [12.9, 147.0], [13.0, 147.0], [13.1, 147.0], [13.2, 147.0], [13.3, 147.0], [13.4, 147.0], [13.5, 147.0], [13.6, 147.0], [13.7, 147.0], [13.8, 147.0], [13.9, 147.0], [14.0, 147.0], [14.1, 147.0], [14.2, 147.0], [14.3, 147.0], [14.4, 147.0], [14.5, 147.0], [14.6, 147.0], [14.7, 147.0], [14.8, 147.0], [14.9, 147.0], [15.0, 147.0], [15.1, 148.0], [15.2, 148.0], [15.3, 148.0], [15.4, 148.0], [15.5, 148.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 148.0], [16.4, 148.0], [16.5, 148.0], [16.6, 148.0], [16.7, 148.0], [16.8, 148.0], [16.9, 148.0], [17.0, 148.0], [17.1, 148.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 148.0], [17.6, 148.0], [17.7, 148.0], [17.8, 148.0], [17.9, 148.0], [18.0, 148.0], [18.1, 148.0], [18.2, 148.0], [18.3, 148.0], [18.4, 148.0], [18.5, 149.0], [18.6, 149.0], [18.7, 149.0], [18.8, 149.0], [18.9, 149.0], [19.0, 149.0], [19.1, 149.0], [19.2, 149.0], [19.3, 149.0], [19.4, 149.0], [19.5, 149.0], [19.6, 149.0], [19.7, 149.0], [19.8, 149.0], [19.9, 149.0], [20.0, 149.0], [20.1, 149.0], [20.2, 149.0], [20.3, 149.0], [20.4, 149.0], [20.5, 149.0], [20.6, 149.0], [20.7, 149.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 149.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 149.0], [21.7, 150.0], [21.8, 150.0], [21.9, 150.0], [22.0, 150.0], [22.1, 150.0], [22.2, 150.0], [22.3, 150.0], [22.4, 150.0], [22.5, 150.0], [22.6, 150.0], [22.7, 150.0], [22.8, 150.0], [22.9, 150.0], [23.0, 150.0], [23.1, 150.0], [23.2, 150.0], [23.3, 150.0], [23.4, 150.0], [23.5, 150.0], [23.6, 150.0], [23.7, 150.0], [23.8, 150.0], [23.9, 150.0], [24.0, 150.0], [24.1, 150.0], [24.2, 150.0], [24.3, 150.0], [24.4, 150.0], [24.5, 150.0], [24.6, 151.0], [24.7, 151.0], [24.8, 151.0], [24.9, 151.0], [25.0, 151.0], [25.1, 151.0], [25.2, 151.0], [25.3, 151.0], [25.4, 151.0], [25.5, 151.0], [25.6, 151.0], [25.7, 151.0], [25.8, 151.0], [25.9, 151.0], [26.0, 151.0], [26.1, 151.0], [26.2, 151.0], [26.3, 151.0], [26.4, 151.0], [26.5, 151.0], [26.6, 151.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 152.0], [27.6, 152.0], [27.7, 152.0], [27.8, 152.0], [27.9, 152.0], [28.0, 152.0], [28.1, 152.0], [28.2, 152.0], [28.3, 152.0], [28.4, 152.0], [28.5, 152.0], [28.6, 152.0], [28.7, 152.0], [28.8, 152.0], [28.9, 152.0], [29.0, 152.0], [29.1, 152.0], [29.2, 152.0], [29.3, 152.0], [29.4, 152.0], [29.5, 152.0], [29.6, 152.0], [29.7, 152.0], [29.8, 152.0], [29.9, 152.0], [30.0, 152.0], [30.1, 152.0], [30.2, 152.0], [30.3, 152.0], [30.4, 152.0], [30.5, 152.0], [30.6, 152.0], [30.7, 152.0], [30.8, 152.0], [30.9, 152.0], [31.0, 152.0], [31.1, 153.0], [31.2, 153.0], [31.3, 153.0], [31.4, 153.0], [31.5, 153.0], [31.6, 153.0], [31.7, 153.0], [31.8, 153.0], [31.9, 153.0], [32.0, 153.0], [32.1, 153.0], [32.2, 153.0], [32.3, 153.0], [32.4, 153.0], [32.5, 153.0], [32.6, 153.0], [32.7, 153.0], [32.8, 153.0], [32.9, 153.0], [33.0, 153.0], [33.1, 153.0], [33.2, 153.0], [33.3, 153.0], [33.4, 153.0], [33.5, 153.0], [33.6, 154.0], [33.7, 154.0], [33.8, 154.0], [33.9, 154.0], [34.0, 154.0], [34.1, 154.0], [34.2, 154.0], [34.3, 154.0], [34.4, 154.0], [34.5, 154.0], [34.6, 154.0], [34.7, 154.0], [34.8, 154.0], [34.9, 154.0], [35.0, 154.0], [35.1, 154.0], [35.2, 154.0], [35.3, 154.0], [35.4, 154.0], [35.5, 154.0], [35.6, 154.0], [35.7, 154.0], [35.8, 154.0], [35.9, 154.0], [36.0, 154.0], [36.1, 154.0], [36.2, 154.0], [36.3, 155.0], [36.4, 155.0], [36.5, 155.0], [36.6, 155.0], [36.7, 155.0], [36.8, 155.0], [36.9, 155.0], [37.0, 155.0], [37.1, 155.0], [37.2, 155.0], [37.3, 155.0], [37.4, 155.0], [37.5, 155.0], [37.6, 155.0], [37.7, 155.0], [37.8, 155.0], [37.9, 155.0], [38.0, 155.0], [38.1, 155.0], [38.2, 155.0], [38.3, 155.0], [38.4, 155.0], [38.5, 155.0], [38.6, 155.0], [38.7, 155.0], [38.8, 155.0], [38.9, 155.0], [39.0, 155.0], [39.1, 155.0], [39.2, 155.0], [39.3, 156.0], [39.4, 156.0], [39.5, 156.0], [39.6, 156.0], [39.7, 156.0], [39.8, 156.0], [39.9, 156.0], [40.0, 156.0], [40.1, 156.0], [40.2, 156.0], [40.3, 156.0], [40.4, 156.0], [40.5, 156.0], [40.6, 156.0], [40.7, 156.0], [40.8, 156.0], [40.9, 156.0], [41.0, 156.0], [41.1, 156.0], [41.2, 156.0], [41.3, 156.0], [41.4, 156.0], [41.5, 156.0], [41.6, 156.0], [41.7, 156.0], [41.8, 157.0], [41.9, 157.0], [42.0, 157.0], [42.1, 157.0], [42.2, 157.0], [42.3, 157.0], [42.4, 157.0], [42.5, 157.0], [42.6, 157.0], [42.7, 157.0], [42.8, 157.0], [42.9, 157.0], [43.0, 157.0], [43.1, 157.0], [43.2, 157.0], [43.3, 157.0], [43.4, 157.0], [43.5, 157.0], [43.6, 157.0], [43.7, 157.0], [43.8, 157.0], [43.9, 157.0], [44.0, 157.0], [44.1, 157.0], [44.2, 157.0], [44.3, 157.0], [44.4, 157.0], [44.5, 158.0], [44.6, 158.0], [44.7, 158.0], [44.8, 158.0], [44.9, 158.0], [45.0, 158.0], [45.1, 158.0], [45.2, 158.0], [45.3, 158.0], [45.4, 158.0], [45.5, 158.0], [45.6, 158.0], [45.7, 158.0], [45.8, 158.0], [45.9, 158.0], [46.0, 158.0], [46.1, 158.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 158.0], [46.6, 158.0], [46.7, 158.0], [46.8, 158.0], [46.9, 158.0], [47.0, 158.0], [47.1, 158.0], [47.2, 158.0], [47.3, 158.0], [47.4, 159.0], [47.5, 159.0], [47.6, 159.0], [47.7, 159.0], [47.8, 159.0], [47.9, 159.0], [48.0, 159.0], [48.1, 159.0], [48.2, 159.0], [48.3, 159.0], [48.4, 159.0], [48.5, 159.0], [48.6, 159.0], [48.7, 159.0], [48.8, 159.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 159.0], [49.5, 159.0], [49.6, 159.0], [49.7, 159.0], [49.8, 160.0], [49.9, 160.0], [50.0, 160.0], [50.1, 160.0], [50.2, 160.0], [50.3, 160.0], [50.4, 160.0], [50.5, 160.0], [50.6, 160.0], [50.7, 160.0], [50.8, 160.0], [50.9, 160.0], [51.0, 160.0], [51.1, 160.0], [51.2, 160.0], [51.3, 160.0], [51.4, 160.0], [51.5, 160.0], [51.6, 160.0], [51.7, 160.0], [51.8, 160.0], [51.9, 160.0], [52.0, 160.0], [52.1, 160.0], [52.2, 160.0], [52.3, 160.0], [52.4, 160.0], [52.5, 160.0], [52.6, 161.0], [52.7, 161.0], [52.8, 161.0], [52.9, 161.0], [53.0, 161.0], [53.1, 161.0], [53.2, 161.0], [53.3, 161.0], [53.4, 161.0], [53.5, 161.0], [53.6, 161.0], [53.7, 161.0], [53.8, 161.0], [53.9, 161.0], [54.0, 161.0], [54.1, 161.0], [54.2, 161.0], [54.3, 161.0], [54.4, 161.0], [54.5, 161.0], [54.6, 161.0], [54.7, 161.0], [54.8, 161.0], [54.9, 162.0], [55.0, 162.0], [55.1, 162.0], [55.2, 162.0], [55.3, 162.0], [55.4, 162.0], [55.5, 162.0], [55.6, 162.0], [55.7, 162.0], [55.8, 162.0], [55.9, 162.0], [56.0, 162.0], [56.1, 162.0], [56.2, 162.0], [56.3, 162.0], [56.4, 162.0], [56.5, 162.0], [56.6, 162.0], [56.7, 162.0], [56.8, 163.0], [56.9, 163.0], [57.0, 163.0], [57.1, 163.0], [57.2, 163.0], [57.3, 163.0], [57.4, 163.0], [57.5, 163.0], [57.6, 163.0], [57.7, 163.0], [57.8, 163.0], [57.9, 163.0], [58.0, 163.0], [58.1, 163.0], [58.2, 163.0], [58.3, 163.0], [58.4, 163.0], [58.5, 163.0], [58.6, 163.0], [58.7, 163.0], [58.8, 163.0], [58.9, 163.0], [59.0, 164.0], [59.1, 164.0], [59.2, 164.0], [59.3, 164.0], [59.4, 164.0], [59.5, 164.0], [59.6, 164.0], [59.7, 164.0], [59.8, 164.0], [59.9, 164.0], [60.0, 164.0], [60.1, 164.0], [60.2, 164.0], [60.3, 164.0], [60.4, 164.0], [60.5, 164.0], [60.6, 164.0], [60.7, 164.0], [60.8, 164.0], [60.9, 164.0], [61.0, 165.0], [61.1, 165.0], [61.2, 165.0], [61.3, 165.0], [61.4, 165.0], [61.5, 165.0], [61.6, 165.0], [61.7, 165.0], [61.8, 165.0], [61.9, 165.0], [62.0, 165.0], [62.1, 166.0], [62.2, 166.0], [62.3, 166.0], [62.4, 166.0], [62.5, 166.0], [62.6, 166.0], [62.7, 166.0], [62.8, 166.0], [62.9, 166.0], [63.0, 166.0], [63.1, 166.0], [63.2, 166.0], [63.3, 166.0], [63.4, 166.0], [63.5, 166.0], [63.6, 166.0], [63.7, 166.0], [63.8, 166.0], [63.9, 167.0], [64.0, 167.0], [64.1, 167.0], [64.2, 167.0], [64.3, 167.0], [64.4, 167.0], [64.5, 167.0], [64.6, 167.0], [64.7, 167.0], [64.8, 167.0], [64.9, 167.0], [65.0, 167.0], [65.1, 167.0], [65.2, 167.0], [65.3, 167.0], [65.4, 168.0], [65.5, 168.0], [65.6, 168.0], [65.7, 168.0], [65.8, 168.0], [65.9, 168.0], [66.0, 168.0], [66.1, 168.0], [66.2, 168.0], [66.3, 168.0], [66.4, 168.0], [66.5, 168.0], [66.6, 168.0], [66.7, 168.0], [66.8, 168.0], [66.9, 168.0], [67.0, 169.0], [67.1, 169.0], [67.2, 169.0], [67.3, 169.0], [67.4, 169.0], [67.5, 169.0], [67.6, 169.0], [67.7, 169.0], [67.8, 169.0], [67.9, 169.0], [68.0, 169.0], [68.1, 169.0], [68.2, 169.0], [68.3, 169.0], [68.4, 169.0], [68.5, 169.0], [68.6, 169.0], [68.7, 169.0], [68.8, 169.0], [68.9, 170.0], [69.0, 170.0], [69.1, 170.0], [69.2, 170.0], [69.3, 170.0], [69.4, 170.0], [69.5, 170.0], [69.6, 170.0], [69.7, 170.0], [69.8, 170.0], [69.9, 170.0], [70.0, 170.0], [70.1, 170.0], [70.2, 170.0], [70.3, 171.0], [70.4, 171.0], [70.5, 171.0], [70.6, 171.0], [70.7, 171.0], [70.8, 171.0], [70.9, 171.0], [71.0, 171.0], [71.1, 171.0], [71.2, 171.0], [71.3, 171.0], [71.4, 171.0], [71.5, 171.0], [71.6, 171.0], [71.7, 172.0], [71.8, 172.0], [71.9, 172.0], [72.0, 172.0], [72.1, 172.0], [72.2, 172.0], [72.3, 172.0], [72.4, 172.0], [72.5, 172.0], [72.6, 172.0], [72.7, 172.0], [72.8, 172.0], [72.9, 172.0], [73.0, 172.0], [73.1, 172.0], [73.2, 173.0], [73.3, 173.0], [73.4, 173.0], [73.5, 173.0], [73.6, 173.0], [73.7, 173.0], [73.8, 173.0], [73.9, 173.0], [74.0, 173.0], [74.1, 173.0], [74.2, 173.0], [74.3, 174.0], [74.4, 174.0], [74.5, 174.0], [74.6, 174.0], [74.7, 174.0], [74.8, 174.0], [74.9, 174.0], [75.0, 174.0], [75.1, 174.0], [75.2, 174.0], [75.3, 174.0], [75.4, 174.0], [75.5, 174.0], [75.6, 174.0], [75.7, 174.0], [75.8, 174.0], [75.9, 174.0], [76.0, 174.0], [76.1, 175.0], [76.2, 175.0], [76.3, 175.0], [76.4, 175.0], [76.5, 175.0], [76.6, 175.0], [76.7, 175.0], [76.8, 175.0], [76.9, 175.0], [77.0, 175.0], [77.1, 175.0], [77.2, 175.0], [77.3, 175.0], [77.4, 175.0], [77.5, 175.0], [77.6, 176.0], [77.7, 176.0], [77.8, 176.0], [77.9, 176.0], [78.0, 176.0], [78.1, 176.0], [78.2, 176.0], [78.3, 176.0], [78.4, 176.0], [78.5, 176.0], [78.6, 176.0], [78.7, 176.0], [78.8, 177.0], [78.9, 177.0], [79.0, 177.0], [79.1, 177.0], [79.2, 177.0], [79.3, 177.0], [79.4, 177.0], [79.5, 177.0], [79.6, 178.0], [79.7, 178.0], [79.8, 178.0], [79.9, 178.0], [80.0, 178.0], [80.1, 178.0], [80.2, 178.0], [80.3, 178.0], [80.4, 178.0], [80.5, 179.0], [80.6, 179.0], [80.7, 179.0], [80.8, 179.0], [80.9, 179.0], [81.0, 179.0], [81.1, 179.0], [81.2, 179.0], [81.3, 179.0], [81.4, 179.0], [81.5, 180.0], [81.6, 180.0], [81.7, 180.0], [81.8, 180.0], [81.9, 180.0], [82.0, 180.0], [82.1, 180.0], [82.2, 181.0], [82.3, 181.0], [82.4, 181.0], [82.5, 181.0], [82.6, 182.0], [82.7, 182.0], [82.8, 182.0], [82.9, 182.0], [83.0, 183.0], [83.1, 183.0], [83.2, 183.0], [83.3, 183.0], [83.4, 184.0], [83.5, 184.0], [83.6, 184.0], [83.7, 184.0], [83.8, 185.0], [83.9, 185.0], [84.0, 185.0], [84.1, 185.0], [84.2, 185.0], [84.3, 185.0], [84.4, 185.0], [84.5, 185.0], [84.6, 186.0], [84.7, 186.0], [84.8, 186.0], [84.9, 186.0], [85.0, 186.0], [85.1, 186.0], [85.2, 186.0], [85.3, 187.0], [85.4, 187.0], [85.5, 187.0], [85.6, 187.0], [85.7, 187.0], [85.8, 188.0], [85.9, 188.0], [86.0, 188.0], [86.1, 189.0], [86.2, 189.0], [86.3, 189.0], [86.4, 189.0], [86.5, 189.0], [86.6, 190.0], [86.7, 190.0], [86.8, 190.0], [86.9, 190.0], [87.0, 190.0], [87.1, 191.0], [87.2, 191.0], [87.3, 191.0], [87.4, 191.0], [87.5, 191.0], [87.6, 192.0], [87.7, 192.0], [87.8, 192.0], [87.9, 192.0], [88.0, 193.0], [88.1, 193.0], [88.2, 193.0], [88.3, 193.0], [88.4, 194.0], [88.5, 194.0], [88.6, 194.0], [88.7, 195.0], [88.8, 195.0], [88.9, 195.0], [89.0, 195.0], [89.1, 195.0], [89.2, 195.0], [89.3, 196.0], [89.4, 196.0], [89.5, 196.0], [89.6, 197.0], [89.7, 197.0], [89.8, 198.0], [89.9, 198.0], [90.0, 198.0], [90.1, 199.0], [90.2, 199.0], [90.3, 200.0], [90.4, 200.0], [90.5, 200.0], [90.6, 201.0], [90.7, 201.0], [90.8, 201.0], [90.9, 202.0], [91.0, 202.0], [91.1, 202.0], [91.2, 202.0], [91.3, 203.0], [91.4, 204.0], [91.5, 204.0], [91.6, 205.0], [91.7, 205.0], [91.8, 206.0], [91.9, 207.0], [92.0, 207.0], [92.1, 208.0], [92.2, 208.0], [92.3, 209.0], [92.4, 210.0], [92.5, 210.0], [92.6, 212.0], [92.7, 212.0], [92.8, 213.0], [92.9, 213.0], [93.0, 213.0], [93.1, 215.0], [93.2, 215.0], [93.3, 216.0], [93.4, 217.0], [93.5, 218.0], [93.6, 221.0], [93.7, 222.0], [93.8, 223.0], [93.9, 224.0], [94.0, 224.0], [94.1, 225.0], [94.2, 226.0], [94.3, 229.0], [94.4, 231.0], [94.5, 231.0], [94.6, 232.0], [94.7, 232.0], [94.8, 237.0], [94.9, 240.0], [95.0, 240.0], [95.1, 243.0], [95.2, 243.0], [95.3, 246.0], [95.4, 248.0], [95.5, 251.0], [95.6, 255.0], [95.7, 255.0], [95.8, 256.0], [95.9, 259.0], [96.0, 260.0], [96.1, 262.0], [96.2, 263.0], [96.3, 265.0], [96.4, 273.0], [96.5, 277.0], [96.6, 281.0], [96.7, 285.0], [96.8, 289.0], [96.9, 292.0], [97.0, 300.0], [97.1, 312.0], [97.2, 321.0], [97.3, 330.0], [97.4, 334.0], [97.5, 347.0], [97.6, 385.0], [97.7, 394.0], [97.8, 401.0], [97.9, 414.0], [98.0, 416.0], [98.1, 420.0], [98.2, 421.0], [98.3, 430.0], [98.4, 430.0], [98.5, 435.0], [98.6, 445.0], [98.7, 461.0], [98.8, 515.0], [98.9, 524.0], [99.0, 537.0], [99.1, 561.0], [99.2, 564.0], [99.3, 591.0], [99.4, 643.0], [99.5, 659.0], [99.6, 723.0], [99.7, 750.0], [99.8, 922.0], [99.9, 1469.0], [100.0, 7484.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[0.0, 320.0], [0.1, 323.0], [0.2, 324.0], [0.3, 327.0], [0.4, 328.0], [0.5, 329.0], [0.6, 329.0], [0.7, 330.0], [0.8, 330.0], [0.9, 330.0], [1.0, 331.0], [1.1, 333.0], [1.2, 333.0], [1.3, 334.0], [1.4, 334.0], [1.5, 335.0], [1.6, 336.0], [1.7, 336.0], [1.8, 337.0], [1.9, 337.0], [2.0, 338.0], [2.1, 338.0], [2.2, 339.0], [2.3, 339.0], [2.4, 340.0], [2.5, 341.0], [2.6, 341.0], [2.7, 342.0], [2.8, 342.0], [2.9, 343.0], [3.0, 343.0], [3.1, 343.0], [3.2, 343.0], [3.3, 344.0], [3.4, 344.0], [3.5, 344.0], [3.6, 344.0], [3.7, 344.0], [3.8, 345.0], [3.9, 345.0], [4.0, 345.0], [4.1, 345.0], [4.2, 346.0], [4.3, 346.0], [4.4, 347.0], [4.5, 347.0], [4.6, 347.0], [4.7, 347.0], [4.8, 347.0], [4.9, 347.0], [5.0, 348.0], [5.1, 348.0], [5.2, 348.0], [5.3, 348.0], [5.4, 348.0], [5.5, 349.0], [5.6, 349.0], [5.7, 349.0], [5.8, 349.0], [5.9, 349.0], [6.0, 350.0], [6.1, 350.0], [6.2, 350.0], [6.3, 350.0], [6.4, 350.0], [6.5, 350.0], [6.6, 351.0], [6.7, 351.0], [6.8, 351.0], [6.9, 351.0], [7.0, 351.0], [7.1, 351.0], [7.2, 351.0], [7.3, 352.0], [7.4, 352.0], [7.5, 352.0], [7.6, 352.0], [7.7, 352.0], [7.8, 352.0], [7.9, 352.0], [8.0, 352.0], [8.1, 352.0], [8.2, 352.0], [8.3, 353.0], [8.4, 353.0], [8.5, 353.0], [8.6, 353.0], [8.7, 353.0], [8.8, 353.0], [8.9, 353.0], [9.0, 354.0], [9.1, 354.0], [9.2, 354.0], [9.3, 354.0], [9.4, 354.0], [9.5, 354.0], [9.6, 354.0], [9.7, 354.0], [9.8, 354.0], [9.9, 354.0], [10.0, 355.0], [10.1, 355.0], [10.2, 355.0], [10.3, 355.0], [10.4, 355.0], [10.5, 355.0], [10.6, 355.0], [10.7, 355.0], [10.8, 355.0], [10.9, 355.0], [11.0, 356.0], [11.1, 356.0], [11.2, 356.0], [11.3, 356.0], [11.4, 356.0], [11.5, 356.0], [11.6, 357.0], [11.7, 357.0], [11.8, 357.0], [11.9, 357.0], [12.0, 357.0], [12.1, 357.0], [12.2, 358.0], [12.3, 358.0], [12.4, 358.0], [12.5, 358.0], [12.6, 358.0], [12.7, 358.0], [12.8, 358.0], [12.9, 358.0], [13.0, 358.0], [13.1, 358.0], [13.2, 359.0], [13.3, 359.0], [13.4, 359.0], [13.5, 359.0], [13.6, 359.0], [13.7, 359.0], [13.8, 359.0], [13.9, 359.0], [14.0, 359.0], [14.1, 359.0], [14.2, 359.0], [14.3, 360.0], [14.4, 360.0], [14.5, 360.0], [14.6, 360.0], [14.7, 360.0], [14.8, 360.0], [14.9, 360.0], [15.0, 360.0], [15.1, 360.0], [15.2, 361.0], [15.3, 361.0], [15.4, 361.0], [15.5, 361.0], [15.6, 361.0], [15.7, 361.0], [15.8, 361.0], [15.9, 362.0], [16.0, 362.0], [16.1, 362.0], [16.2, 362.0], [16.3, 362.0], [16.4, 362.0], [16.5, 362.0], [16.6, 362.0], [16.7, 362.0], [16.8, 362.0], [16.9, 362.0], [17.0, 362.0], [17.1, 362.0], [17.2, 363.0], [17.3, 363.0], [17.4, 363.0], [17.5, 363.0], [17.6, 363.0], [17.7, 363.0], [17.8, 363.0], [17.9, 363.0], [18.0, 363.0], [18.1, 364.0], [18.2, 364.0], [18.3, 364.0], [18.4, 364.0], [18.5, 364.0], [18.6, 364.0], [18.7, 364.0], [18.8, 364.0], [18.9, 364.0], [19.0, 364.0], [19.1, 364.0], [19.2, 364.0], [19.3, 364.0], [19.4, 365.0], [19.5, 365.0], [19.6, 365.0], [19.7, 365.0], [19.8, 365.0], [19.9, 365.0], [20.0, 365.0], [20.1, 365.0], [20.2, 365.0], [20.3, 366.0], [20.4, 366.0], [20.5, 366.0], [20.6, 366.0], [20.7, 366.0], [20.8, 366.0], [20.9, 366.0], [21.0, 366.0], [21.1, 366.0], [21.2, 366.0], [21.3, 366.0], [21.4, 366.0], [21.5, 367.0], [21.6, 367.0], [21.7, 367.0], [21.8, 367.0], [21.9, 367.0], [22.0, 367.0], [22.1, 367.0], [22.2, 367.0], [22.3, 367.0], [22.4, 367.0], [22.5, 367.0], [22.6, 367.0], [22.7, 367.0], [22.8, 368.0], [22.9, 368.0], [23.0, 368.0], [23.1, 368.0], [23.2, 368.0], [23.3, 368.0], [23.4, 368.0], [23.5, 368.0], [23.6, 368.0], [23.7, 368.0], [23.8, 368.0], [23.9, 368.0], [24.0, 368.0], [24.1, 368.0], [24.2, 369.0], [24.3, 369.0], [24.4, 369.0], [24.5, 369.0], [24.6, 369.0], [24.7, 369.0], [24.8, 369.0], [24.9, 369.0], [25.0, 369.0], [25.1, 369.0], [25.2, 370.0], [25.3, 370.0], [25.4, 370.0], [25.5, 370.0], [25.6, 370.0], [25.7, 370.0], [25.8, 370.0], [25.9, 370.0], [26.0, 371.0], [26.1, 371.0], [26.2, 371.0], [26.3, 371.0], [26.4, 371.0], [26.5, 371.0], [26.6, 371.0], [26.7, 371.0], [26.8, 371.0], [26.9, 371.0], [27.0, 371.0], [27.1, 371.0], [27.2, 372.0], [27.3, 372.0], [27.4, 372.0], [27.5, 372.0], [27.6, 372.0], [27.7, 372.0], [27.8, 372.0], [27.9, 372.0], [28.0, 372.0], [28.1, 372.0], [28.2, 372.0], [28.3, 372.0], [28.4, 372.0], [28.5, 373.0], [28.6, 373.0], [28.7, 373.0], [28.8, 373.0], [28.9, 373.0], [29.0, 373.0], [29.1, 373.0], [29.2, 373.0], [29.3, 373.0], [29.4, 373.0], [29.5, 373.0], [29.6, 373.0], [29.7, 373.0], [29.8, 374.0], [29.9, 374.0], [30.0, 374.0], [30.1, 374.0], [30.2, 374.0], [30.3, 374.0], [30.4, 374.0], [30.5, 374.0], [30.6, 374.0], [30.7, 374.0], [30.8, 374.0], [30.9, 374.0], [31.0, 374.0], [31.1, 374.0], [31.2, 375.0], [31.3, 375.0], [31.4, 375.0], [31.5, 375.0], [31.6, 375.0], [31.7, 375.0], [31.8, 375.0], [31.9, 375.0], [32.0, 375.0], [32.1, 375.0], [32.2, 375.0], [32.3, 375.0], [32.4, 375.0], [32.5, 375.0], [32.6, 376.0], [32.7, 376.0], [32.8, 376.0], [32.9, 376.0], [33.0, 376.0], [33.1, 376.0], [33.2, 376.0], [33.3, 376.0], [33.4, 376.0], [33.5, 376.0], [33.6, 376.0], [33.7, 376.0], [33.8, 376.0], [33.9, 376.0], [34.0, 377.0], [34.1, 377.0], [34.2, 377.0], [34.3, 377.0], [34.4, 377.0], [34.5, 377.0], [34.6, 377.0], [34.7, 377.0], [34.8, 377.0], [34.9, 377.0], [35.0, 377.0], [35.1, 377.0], [35.2, 377.0], [35.3, 378.0], [35.4, 378.0], [35.5, 378.0], [35.6, 378.0], [35.7, 378.0], [35.8, 378.0], [35.9, 378.0], [36.0, 378.0], [36.1, 378.0], [36.2, 378.0], [36.3, 378.0], [36.4, 378.0], [36.5, 379.0], [36.6, 379.0], [36.7, 379.0], [36.8, 379.0], [36.9, 379.0], [37.0, 379.0], [37.1, 379.0], [37.2, 379.0], [37.3, 379.0], [37.4, 379.0], [37.5, 379.0], [37.6, 379.0], [37.7, 379.0], [37.8, 380.0], [37.9, 380.0], [38.0, 380.0], [38.1, 380.0], [38.2, 380.0], [38.3, 380.0], [38.4, 380.0], [38.5, 380.0], [38.6, 380.0], [38.7, 380.0], [38.8, 380.0], [38.9, 380.0], [39.0, 381.0], [39.1, 381.0], [39.2, 381.0], [39.3, 381.0], [39.4, 381.0], [39.5, 381.0], [39.6, 381.0], [39.7, 381.0], [39.8, 381.0], [39.9, 381.0], [40.0, 381.0], [40.1, 381.0], [40.2, 381.0], [40.3, 382.0], [40.4, 382.0], [40.5, 382.0], [40.6, 382.0], [40.7, 382.0], [40.8, 382.0], [40.9, 382.0], [41.0, 382.0], [41.1, 382.0], [41.2, 382.0], [41.3, 383.0], [41.4, 383.0], [41.5, 383.0], [41.6, 383.0], [41.7, 383.0], [41.8, 383.0], [41.9, 383.0], [42.0, 383.0], [42.1, 383.0], [42.2, 383.0], [42.3, 383.0], [42.4, 384.0], [42.5, 384.0], [42.6, 384.0], [42.7, 384.0], [42.8, 384.0], [42.9, 384.0], [43.0, 384.0], [43.1, 384.0], [43.2, 384.0], [43.3, 384.0], [43.4, 384.0], [43.5, 384.0], [43.6, 385.0], [43.7, 385.0], [43.8, 385.0], [43.9, 385.0], [44.0, 385.0], [44.1, 385.0], [44.2, 385.0], [44.3, 385.0], [44.4, 385.0], [44.5, 385.0], [44.6, 385.0], [44.7, 385.0], [44.8, 385.0], [44.9, 385.0], [45.0, 386.0], [45.1, 386.0], [45.2, 386.0], [45.3, 386.0], [45.4, 386.0], [45.5, 386.0], [45.6, 386.0], [45.7, 386.0], [45.8, 386.0], [45.9, 386.0], [46.0, 386.0], [46.1, 386.0], [46.2, 386.0], [46.3, 386.0], [46.4, 386.0], [46.5, 387.0], [46.6, 387.0], [46.7, 387.0], [46.8, 387.0], [46.9, 387.0], [47.0, 387.0], [47.1, 387.0], [47.2, 387.0], [47.3, 387.0], [47.4, 387.0], [47.5, 387.0], [47.6, 387.0], [47.7, 387.0], [47.8, 387.0], [47.9, 388.0], [48.0, 388.0], [48.1, 388.0], [48.2, 388.0], [48.3, 388.0], [48.4, 388.0], [48.5, 388.0], [48.6, 388.0], [48.7, 388.0], [48.8, 388.0], [48.9, 388.0], [49.0, 388.0], [49.1, 388.0], [49.2, 388.0], [49.3, 389.0], [49.4, 389.0], [49.5, 389.0], [49.6, 389.0], [49.7, 389.0], [49.8, 389.0], [49.9, 389.0], [50.0, 389.0], [50.1, 389.0], [50.2, 389.0], [50.3, 389.0], [50.4, 390.0], [50.5, 390.0], [50.6, 390.0], [50.7, 390.0], [50.8, 390.0], [50.9, 390.0], [51.0, 390.0], [51.1, 390.0], [51.2, 390.0], [51.3, 390.0], [51.4, 390.0], [51.5, 390.0], [51.6, 390.0], [51.7, 390.0], [51.8, 391.0], [51.9, 391.0], [52.0, 391.0], [52.1, 391.0], [52.2, 391.0], [52.3, 391.0], [52.4, 391.0], [52.5, 391.0], [52.6, 391.0], [52.7, 392.0], [52.8, 392.0], [52.9, 392.0], [53.0, 392.0], [53.1, 392.0], [53.2, 392.0], [53.3, 392.0], [53.4, 392.0], [53.5, 392.0], [53.6, 392.0], [53.7, 392.0], [53.8, 392.0], [53.9, 392.0], [54.0, 392.0], [54.1, 393.0], [54.2, 393.0], [54.3, 393.0], [54.4, 393.0], [54.5, 393.0], [54.6, 393.0], [54.7, 393.0], [54.8, 393.0], [54.9, 393.0], [55.0, 393.0], [55.1, 394.0], [55.2, 394.0], [55.3, 394.0], [55.4, 394.0], [55.5, 394.0], [55.6, 394.0], [55.7, 394.0], [55.8, 394.0], [55.9, 394.0], [56.0, 394.0], [56.1, 394.0], [56.2, 394.0], [56.3, 395.0], [56.4, 395.0], [56.5, 395.0], [56.6, 395.0], [56.7, 395.0], [56.8, 395.0], [56.9, 395.0], [57.0, 395.0], [57.1, 395.0], [57.2, 396.0], [57.3, 396.0], [57.4, 396.0], [57.5, 396.0], [57.6, 396.0], [57.7, 396.0], [57.8, 396.0], [57.9, 396.0], [58.0, 396.0], [58.1, 396.0], [58.2, 396.0], [58.3, 397.0], [58.4, 397.0], [58.5, 397.0], [58.6, 397.0], [58.7, 397.0], [58.8, 397.0], [58.9, 397.0], [59.0, 397.0], [59.1, 397.0], [59.2, 397.0], [59.3, 398.0], [59.4, 398.0], [59.5, 398.0], [59.6, 398.0], [59.7, 398.0], [59.8, 398.0], [59.9, 398.0], [60.0, 398.0], [60.1, 398.0], [60.2, 398.0], [60.3, 398.0], [60.4, 398.0], [60.5, 398.0], [60.6, 398.0], [60.7, 398.0], [60.8, 399.0], [60.9, 399.0], [61.0, 399.0], [61.1, 399.0], [61.2, 399.0], [61.3, 399.0], [61.4, 399.0], [61.5, 399.0], [61.6, 399.0], [61.7, 399.0], [61.8, 399.0], [61.9, 400.0], [62.0, 400.0], [62.1, 400.0], [62.2, 400.0], [62.3, 400.0], [62.4, 400.0], [62.5, 400.0], [62.6, 401.0], [62.7, 401.0], [62.8, 401.0], [62.9, 401.0], [63.0, 401.0], [63.1, 401.0], [63.2, 401.0], [63.3, 401.0], [63.4, 401.0], [63.5, 402.0], [63.6, 402.0], [63.7, 402.0], [63.8, 402.0], [63.9, 402.0], [64.0, 402.0], [64.1, 402.0], [64.2, 402.0], [64.3, 402.0], [64.4, 403.0], [64.5, 403.0], [64.6, 403.0], [64.7, 403.0], [64.8, 403.0], [64.9, 403.0], [65.0, 403.0], [65.1, 403.0], [65.2, 403.0], [65.3, 403.0], [65.4, 403.0], [65.5, 404.0], [65.6, 404.0], [65.7, 404.0], [65.8, 404.0], [65.9, 404.0], [66.0, 404.0], [66.1, 404.0], [66.2, 404.0], [66.3, 404.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 405.0], [67.2, 405.0], [67.3, 406.0], [67.4, 406.0], [67.5, 406.0], [67.6, 406.0], [67.7, 406.0], [67.8, 407.0], [67.9, 407.0], [68.0, 407.0], [68.1, 407.0], [68.2, 407.0], [68.3, 407.0], [68.4, 407.0], [68.5, 408.0], [68.6, 408.0], [68.7, 408.0], [68.8, 408.0], [68.9, 408.0], [69.0, 408.0], [69.1, 408.0], [69.2, 408.0], [69.3, 408.0], [69.4, 408.0], [69.5, 408.0], [69.6, 409.0], [69.7, 409.0], [69.8, 409.0], [69.9, 409.0], [70.0, 409.0], [70.1, 409.0], [70.2, 409.0], [70.3, 409.0], [70.4, 409.0], [70.5, 410.0], [70.6, 410.0], [70.7, 410.0], [70.8, 410.0], [70.9, 410.0], [71.0, 410.0], [71.1, 411.0], [71.2, 411.0], [71.3, 411.0], [71.4, 411.0], [71.5, 411.0], [71.6, 411.0], [71.7, 411.0], [71.8, 411.0], [71.9, 411.0], [72.0, 411.0], [72.1, 411.0], [72.2, 411.0], [72.3, 411.0], [72.4, 412.0], [72.5, 412.0], [72.6, 412.0], [72.7, 412.0], [72.8, 412.0], [72.9, 412.0], [73.0, 412.0], [73.1, 412.0], [73.2, 412.0], [73.3, 413.0], [73.4, 413.0], [73.5, 413.0], [73.6, 413.0], [73.7, 413.0], [73.8, 413.0], [73.9, 414.0], [74.0, 414.0], [74.1, 414.0], [74.2, 414.0], [74.3, 414.0], [74.4, 414.0], [74.5, 414.0], [74.6, 415.0], [74.7, 415.0], [74.8, 415.0], [74.9, 415.0], [75.0, 415.0], [75.1, 415.0], [75.2, 415.0], [75.3, 416.0], [75.4, 416.0], [75.5, 416.0], [75.6, 416.0], [75.7, 416.0], [75.8, 416.0], [75.9, 416.0], [76.0, 417.0], [76.1, 417.0], [76.2, 417.0], [76.3, 417.0], [76.4, 417.0], [76.5, 417.0], [76.6, 418.0], [76.7, 418.0], [76.8, 418.0], [76.9, 418.0], [77.0, 418.0], [77.1, 418.0], [77.2, 419.0], [77.3, 419.0], [77.4, 419.0], [77.5, 419.0], [77.6, 419.0], [77.7, 420.0], [77.8, 420.0], [77.9, 420.0], [78.0, 420.0], [78.1, 420.0], [78.2, 421.0], [78.3, 421.0], [78.4, 421.0], [78.5, 421.0], [78.6, 421.0], [78.7, 421.0], [78.8, 422.0], [78.9, 422.0], [79.0, 422.0], [79.1, 422.0], [79.2, 422.0], [79.3, 422.0], [79.4, 422.0], [79.5, 423.0], [79.6, 423.0], [79.7, 423.0], [79.8, 423.0], [79.9, 424.0], [80.0, 424.0], [80.1, 424.0], [80.2, 424.0], [80.3, 424.0], [80.4, 425.0], [80.5, 425.0], [80.6, 425.0], [80.7, 425.0], [80.8, 426.0], [80.9, 426.0], [81.0, 426.0], [81.1, 427.0], [81.2, 427.0], [81.3, 427.0], [81.4, 427.0], [81.5, 427.0], [81.6, 427.0], [81.7, 428.0], [81.8, 428.0], [81.9, 428.0], [82.0, 428.0], [82.1, 428.0], [82.2, 429.0], [82.3, 429.0], [82.4, 429.0], [82.5, 429.0], [82.6, 430.0], [82.7, 430.0], [82.8, 430.0], [82.9, 430.0], [83.0, 431.0], [83.1, 431.0], [83.2, 431.0], [83.3, 431.0], [83.4, 431.0], [83.5, 432.0], [83.6, 432.0], [83.7, 432.0], [83.8, 433.0], [83.9, 433.0], [84.0, 433.0], [84.1, 433.0], [84.2, 433.0], [84.3, 434.0], [84.4, 434.0], [84.5, 435.0], [84.6, 435.0], [84.7, 435.0], [84.8, 436.0], [84.9, 436.0], [85.0, 436.0], [85.1, 437.0], [85.2, 437.0], [85.3, 437.0], [85.4, 438.0], [85.5, 438.0], [85.6, 438.0], [85.7, 439.0], [85.8, 439.0], [85.9, 439.0], [86.0, 439.0], [86.1, 440.0], [86.2, 440.0], [86.3, 440.0], [86.4, 440.0], [86.5, 440.0], [86.6, 441.0], [86.7, 441.0], [86.8, 441.0], [86.9, 441.0], [87.0, 441.0], [87.1, 442.0], [87.2, 442.0], [87.3, 442.0], [87.4, 442.0], [87.5, 443.0], [87.6, 443.0], [87.7, 443.0], [87.8, 444.0], [87.9, 444.0], [88.0, 444.0], [88.1, 445.0], [88.2, 445.0], [88.3, 445.0], [88.4, 445.0], [88.5, 446.0], [88.6, 447.0], [88.7, 447.0], [88.8, 448.0], [88.9, 448.0], [89.0, 448.0], [89.1, 448.0], [89.2, 448.0], [89.3, 449.0], [89.4, 450.0], [89.5, 450.0], [89.6, 450.0], [89.7, 451.0], [89.8, 451.0], [89.9, 452.0], [90.0, 452.0], [90.1, 452.0], [90.2, 453.0], [90.3, 454.0], [90.4, 454.0], [90.5, 455.0], [90.6, 455.0], [90.7, 455.0], [90.8, 455.0], [90.9, 456.0], [91.0, 457.0], [91.1, 457.0], [91.2, 458.0], [91.3, 458.0], [91.4, 458.0], [91.5, 459.0], [91.6, 459.0], [91.7, 460.0], [91.8, 460.0], [91.9, 461.0], [92.0, 462.0], [92.1, 462.0], [92.2, 463.0], [92.3, 463.0], [92.4, 464.0], [92.5, 465.0], [92.6, 466.0], [92.7, 466.0], [92.8, 469.0], [92.9, 469.0], [93.0, 471.0], [93.1, 471.0], [93.2, 472.0], [93.3, 473.0], [93.4, 475.0], [93.5, 476.0], [93.6, 477.0], [93.7, 478.0], [93.8, 480.0], [93.9, 482.0], [94.0, 482.0], [94.1, 483.0], [94.2, 484.0], [94.3, 487.0], [94.4, 488.0], [94.5, 490.0], [94.6, 491.0], [94.7, 493.0], [94.8, 496.0], [94.9, 497.0], [95.0, 498.0], [95.1, 499.0], [95.2, 501.0], [95.3, 503.0], [95.4, 505.0], [95.5, 509.0], [95.6, 513.0], [95.7, 514.0], [95.8, 517.0], [95.9, 520.0], [96.0, 522.0], [96.1, 523.0], [96.2, 526.0], [96.3, 528.0], [96.4, 530.0], [96.5, 535.0], [96.6, 536.0], [96.7, 538.0], [96.8, 544.0], [96.9, 546.0], [97.0, 553.0], [97.1, 569.0], [97.2, 577.0], [97.3, 595.0], [97.4, 598.0], [97.5, 605.0], [97.6, 620.0], [97.7, 623.0], [97.8, 642.0], [97.9, 654.0], [98.0, 661.0], [98.1, 684.0], [98.2, 695.0], [98.3, 695.0], [98.4, 696.0], [98.5, 696.0], [98.6, 774.0], [98.7, 818.0], [98.8, 848.0], [98.9, 915.0], [99.0, 927.0], [99.1, 1088.0], [99.2, 1191.0], [99.3, 1384.0], [99.4, 1563.0], [99.5, 1576.0], [99.6, 1716.0], [99.7, 1873.0], [99.8, 1948.0], [99.9, 8995.0], [100.0, 9816.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 2167.0, "series": [{"data": [[600.0, 19.0], [700.0, 7.0], [200.0, 2133.0], [800.0, 1.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 4.0], [300.0, 84.0], [1300.0, 1.0], [1500.0, 1.0], [100.0, 97.0], [400.0, 33.0], [6600.0, 1.0], [1600.0, 1.0], [1800.0, 1.0], [500.0, 13.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1100.0, 8.0], [600.0, 413.0], [1200.0, 4.0], [1300.0, 3.0], [700.0, 176.0], [1400.0, 3.0], [1500.0, 2.0], [800.0, 82.0], [400.0, 140.0], [900.0, 32.0], [500.0, 1527.0], [1000.0, 10.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[600.0, 5.0], [700.0, 5.0], [200.0, 160.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [300.0, 19.0], [1400.0, 1.0], [5800.0, 1.0], [100.0, 2167.0], [400.0, 24.0], [7400.0, 1.0], [500.0, 14.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[9200.0, 1.0], [8900.0, 1.0], [600.0, 26.0], [9800.0, 1.0], [700.0, 4.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 1.0], [300.0, 1485.0], [1300.0, 2.0], [1500.0, 5.0], [400.0, 798.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 4.0], [1900.0, 2.0], [500.0, 55.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7142.0, "series": [{"data": [[0.0, 7142.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2434.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 24.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.63774146E12, "maxY": 8.0, "series": [{"data": [[1.63774182E12, 8.0], [1.63774164E12, 8.0], [1.63774194E12, 1.0], [1.63774176E12, 8.0], [1.63774158E12, 8.0], [1.63774146E12, 8.0], [1.63774188E12, 6.540073982737366], [1.6377417E12, 8.0], [1.63774152E12, 8.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774194E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 158.25, "minX": 1.0, "maxY": 596.4492254733224, "series": [{"data": [[8.0, 249.32356742783242], [4.0, 211.0], [2.0, 239.46153846153845], [1.0, 235.41666666666669], [5.0, 233.66666666666666], [6.0, 299.5333333333333], [3.0, 229.16666666666669], [7.0, 236.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[7.867499999999997, 249.63124999999968]], "isOverall": false, "label": "Get aws/sts-Aggregated", "isController": false}, {"data": [[8.0, 596.4492254733224], [4.0, 513.0], [2.0, 541.0], [1.0, 529.9166666666665], [5.0, 591.9], [6.0, 552.4285714285714], [3.0, 533.4545454545455]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[7.870416666666665, 594.9254166666675]], "isOverall": false, "label": "Get Phos-Aggregated", "isController": false}, {"data": [[8.0, 180.61392949269168], [4.0, 158.25], [2.0, 161.42857142857144], [1.0, 168.81818181818184], [5.0, 162.5], [6.0, 197.78571428571428], [3.0, 166.00000000000003]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[7.874166666666663, 180.49583333333374]], "isOverall": false, "label": "Get Covid Exposure site-Aggregated", "isController": false}, {"data": [[8.0, 422.09321305841956], [4.0, 391.5], [2.0, 385.0], [1.0, 400.7272727272727], [5.0, 395.33333333333337], [6.0, 401.07142857142856], [3.0, 374.0]], "isOverall": false, "label": "Login  Request", "isController": false}, {"data": [[7.8770833333333306, 421.23083333333335]], "isOverall": false, "label": "Login  Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 8.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 46.38333333333333, "minX": 1.63774146E12, "maxY": 52699.5, "series": [{"data": [[1.63774182E12, 49299.75], [1.63774164E12, 51890.21666666667], [1.63774194E12, 280.4166666666667], [1.63774176E12, 52032.55], [1.63774158E12, 49118.05], [1.63774146E12, 27582.416666666668], [1.63774188E12, 30822.883333333335], [1.6377417E12, 52699.5], [1.63774152E12, 49314.21666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63774182E12, 10241.083333333334], [1.63774164E12, 10781.833333333334], [1.63774194E12, 46.38333333333333], [1.63774176E12, 10797.55], [1.63774158E12, 10191.166666666666], [1.63774146E12, 5768.366666666667], [1.63774188E12, 6369.0], [1.6377417E12, 10964.716666666667], [1.63774152E12, 10239.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774194E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 161.0, "minX": 1.63774146E12, "maxY": 639.671779141104, "series": [{"data": [[1.63774182E12, 267.1104294478529], [1.63774164E12, 248.54941860465112], [1.63774194E12, 230.0], [1.63774176E12, 240.23768115942022], [1.63774158E12, 265.34782608695684], [1.63774146E12, 240.624309392265], [1.63774188E12, 245.4362745098039], [1.6377417E12, 237.865329512894], [1.63774152E12, 248.05810397553492]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774182E12, 597.7607361963195], [1.63774164E12, 576.5685131195336], [1.63774194E12, 531.5], [1.63774176E12, 566.9941860465116], [1.63774158E12, 627.4276923076923], [1.63774146E12, 586.576923076923], [1.63774188E12, 610.0049019607843], [1.6377417E12, 561.5919540229885], [1.63774152E12, 639.671779141104]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774182E12, 191.94153846153836], [1.63774164E12, 168.0409356725146], [1.63774194E12, 161.0], [1.63774176E12, 178.5014577259473], [1.63774158E12, 172.90184049079747], [1.63774146E12, 211.908108108108], [1.63774188E12, 176.51724137931043], [1.6377417E12, 185.96571428571428], [1.63774152E12, 170.65230769230763]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774182E12, 414.8593272171254], [1.63774164E12, 402.9127906976746], [1.63774194E12, 419.0], [1.63774176E12, 410.5772594752188], [1.63774158E12, 414.1358024691358], [1.63774146E12, 606.0806451612904], [1.63774188E12, 391.55999999999995], [1.6377417E12, 389.53868194842397], [1.63774152E12, 411.88343558282236]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774194E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 161.0, "minX": 1.63774146E12, "maxY": 635.2730061349694, "series": [{"data": [[1.63774182E12, 267.09509202453995], [1.63774164E12, 248.5261627906976], [1.63774194E12, 230.0], [1.63774176E12, 240.22318840579717], [1.63774158E12, 265.32919254658367], [1.63774146E12, 240.52486187845307], [1.63774188E12, 245.41176470588232], [1.6377417E12, 237.83381088825217], [1.63774152E12, 248.0061162079511]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774182E12, 592.2239263803682], [1.63774164E12, 572.0087463556853], [1.63774194E12, 531.0], [1.63774176E12, 566.4186046511626], [1.63774158E12, 616.3107692307691], [1.63774146E12, 585.8351648351646], [1.63774188E12, 606.5147058823529], [1.6377417E12, 560.9971264367813], [1.63774152E12, 635.2730061349694]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774182E12, 191.93230769230775], [1.63774164E12, 168.029239766082], [1.63774194E12, 161.0], [1.63774176E12, 178.4810495626822], [1.63774158E12, 172.88650306748468], [1.63774146E12, 211.8972972972973], [1.63774188E12, 176.50738916256154], [1.6377417E12, 185.95142857142858], [1.63774152E12, 170.6369230769231]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774182E12, 414.82874617737025], [1.63774164E12, 402.8924418604654], [1.63774194E12, 419.0], [1.63774176E12, 410.57142857142844], [1.63774158E12, 414.1203703703703], [1.63774146E12, 605.9784946236556], [1.63774188E12, 391.5500000000001], [1.6377417E12, 389.52148997134674], [1.63774152E12, 411.86196319018387]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774194E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63774146E12, "maxY": 51.2043010752688, "series": [{"data": [[1.63774182E12, 7.9754601226993795], [1.63774164E12, 5.043604651162794], [1.63774194E12, 0.0], [1.63774176E12, 6.0637681159420245], [1.63774158E12, 3.624223602484475], [1.63774146E12, 0.0], [1.63774188E12, 7.200980392156862], [1.6377417E12, 1.0744985673352436], [1.63774152E12, 8.477064220183486]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774182E12, 3.9417177914110444], [1.63774164E12, 7.871720116618067], [1.63774194E12, 0.0], [1.63774176E12, 0.0], [1.63774158E12, 2.3015384615384624], [1.63774146E12, 0.0], [1.63774188E12, 1.8333333333333335], [1.6377417E12, 2.163793103448273], [1.63774152E12, 0.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774182E12, 0.0], [1.63774164E12, 0.0], [1.63774194E12, 0.0], [1.63774176E12, 2.4402332361516006], [1.63774158E12, 3.592024539877298], [1.63774146E12, 0.0], [1.63774188E12, 4.660098522167485], [1.6377417E12, 5.305714285714286], [1.63774152E12, 1.2030769230769225]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774182E12, 1.4036697247706413], [1.63774164E12, 5.4011627906976765], [1.63774194E12, 0.0], [1.63774176E12, 2.189504373177845], [1.63774158E12, 0.0], [1.63774146E12, 51.2043010752688], [1.63774188E12, 0.0], [1.6377417E12, 0.0], [1.63774152E12, 0.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774194E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 138.0, "minX": 1.63774146E12, "maxY": 9816.0, "series": [{"data": [[1.63774182E12, 1894.0], [1.63774164E12, 1840.0], [1.63774194E12, 533.0], [1.63774176E12, 1948.0], [1.63774158E12, 6628.0], [1.63774146E12, 9816.0], [1.63774188E12, 1469.0], [1.6377417E12, 5818.0], [1.63774152E12, 1441.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63774182E12, 595.5], [1.63774164E12, 563.0], [1.63774194E12, 533.0], [1.63774176E12, 562.4000000000001], [1.63774158E12, 627.0], [1.63774146E12, 583.5], [1.63774188E12, 609.4000000000002], [1.6377417E12, 551.3], [1.63774152E12, 636.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63774182E12, 946.5000000000005], [1.63774164E12, 889.3199999999997], [1.63774194E12, 533.0], [1.63774176E12, 809.0], [1.63774158E12, 1019.7399999999993], [1.63774146E12, 1537.7499999999977], [1.63774188E12, 890.64], [1.6377417E12, 750.5099999999995], [1.63774152E12, 921.6500000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63774182E12, 696.0], [1.63774164E12, 619.3], [1.63774194E12, 533.0], [1.63774176E12, 615.4000000000001], [1.63774158E12, 727.1999999999998], [1.63774146E12, 673.25], [1.63774188E12, 715.7999999999998], [1.6377417E12, 599.4499999999996], [1.63774152E12, 744.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63774182E12, 139.0], [1.63774164E12, 140.0], [1.63774194E12, 161.0], [1.63774176E12, 139.0], [1.63774158E12, 141.0], [1.63774146E12, 140.0], [1.63774188E12, 142.0], [1.6377417E12, 138.0], [1.63774152E12, 138.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63774182E12, 362.0], [1.63774164E12, 346.0], [1.63774194E12, 332.5], [1.63774176E12, 348.0], [1.63774158E12, 353.0], [1.63774146E12, 354.0], [1.63774188E12, 343.0], [1.6377417E12, 338.0], [1.63774152E12, 358.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774194E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 251.0, "minX": 2.0, "maxY": 519.5, "series": [{"data": [[2.0, 376.5], [3.0, 273.0], [4.0, 307.5], [5.0, 367.5], [6.0, 302.5], [7.0, 251.0], [8.0, 519.5], [9.0, 291.5], [10.0, 478.0], [11.0, 433.0], [12.0, 398.5], [13.0, 395.0], [14.0, 426.0], [15.0, 413.5], [16.0, 415.0], [17.0, 393.0], [18.0, 361.5], [19.0, 362.0], [20.0, 365.0], [21.0, 352.0], [22.0, 352.0], [23.0, 347.0], [24.0, 331.5], [25.0, 343.0], [26.0, 272.5], [27.0, 333.0], [28.0, 311.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 28.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 251.0, "minX": 2.0, "maxY": 519.0, "series": [{"data": [[2.0, 376.0], [3.0, 273.0], [4.0, 307.5], [5.0, 367.5], [6.0, 302.5], [7.0, 251.0], [8.0, 519.0], [9.0, 291.5], [10.0, 477.5], [11.0, 433.0], [12.0, 398.5], [13.0, 395.0], [14.0, 426.0], [15.0, 413.5], [16.0, 415.0], [17.0, 393.0], [18.0, 361.5], [19.0, 362.0], [20.0, 364.5], [21.0, 352.0], [22.0, 352.0], [23.0, 347.0], [24.0, 331.5], [25.0, 343.0], [26.0, 272.5], [27.0, 333.0], [28.0, 311.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 28.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.63774146E12, "maxY": 23.266666666666666, "series": [{"data": [[1.63774182E12, 21.733333333333334], [1.63774164E12, 22.883333333333333], [1.63774194E12, 0.08333333333333333], [1.63774176E12, 22.916666666666668], [1.63774158E12, 21.616666666666667], [1.63774146E12, 12.366666666666667], [1.63774188E12, 13.4], [1.6377417E12, 23.266666666666666], [1.63774152E12, 21.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774194E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63774146E12, "maxY": 17.45, "series": [{"data": [[1.63774182E12, 16.283333333333335], [1.63774164E12, 17.15], [1.63774194E12, 0.08333333333333333], [1.63774176E12, 17.2], [1.63774158E12, 16.216666666666665], [1.63774146E12, 9.133333333333333], [1.63774188E12, 10.183333333333334], [1.6377417E12, 17.45], [1.63774152E12, 16.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63774182E12, 5.45], [1.63774164E12, 5.733333333333333], [1.63774194E12, 0.016666666666666666], [1.63774176E12, 5.716666666666667], [1.63774158E12, 5.4], [1.63774146E12, 3.1], [1.63774188E12, 3.3333333333333335], [1.6377417E12, 5.816666666666666], [1.63774152E12, 5.433333333333334]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774194E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63774146E12, "maxY": 5.833333333333333, "series": [{"data": [[1.63774182E12, 5.45], [1.63774164E12, 5.733333333333333], [1.63774194E12, 0.016666666666666666], [1.63774176E12, 5.716666666666667], [1.63774158E12, 5.4], [1.63774146E12, 3.1], [1.63774188E12, 3.3333333333333335], [1.6377417E12, 5.816666666666666], [1.63774152E12, 5.433333333333334]], "isOverall": false, "label": "Login  Request-success", "isController": false}, {"data": [[1.63774182E12, 5.416666666666667], [1.63774164E12, 5.7], [1.63774194E12, 0.016666666666666666], [1.63774176E12, 5.716666666666667], [1.63774158E12, 5.433333333333334], [1.63774146E12, 3.0833333333333335], [1.63774188E12, 3.3833333333333333], [1.6377417E12, 5.833333333333333], [1.63774152E12, 5.416666666666667]], "isOverall": false, "label": "Get Covid Exposure site-success", "isController": false}, {"data": [[1.63774182E12, 5.433333333333334], [1.63774164E12, 5.733333333333333], [1.63774194E12, 0.03333333333333333], [1.63774176E12, 5.75], [1.63774158E12, 5.366666666666666], [1.63774146E12, 3.0166666666666666], [1.63774188E12, 3.4], [1.6377417E12, 5.816666666666666], [1.63774152E12, 5.45]], "isOverall": false, "label": "Get aws/sts-success", "isController": false}, {"data": [[1.63774182E12, 5.433333333333334], [1.63774164E12, 5.716666666666667], [1.63774194E12, 0.03333333333333333], [1.63774176E12, 5.733333333333333], [1.63774158E12, 5.416666666666667], [1.63774146E12, 3.033333333333333], [1.63774188E12, 3.4], [1.6377417E12, 5.8], [1.63774152E12, 5.433333333333334]], "isOverall": false, "label": "Get Phos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774194E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.63774146E12, "maxY": 23.266666666666666, "series": [{"data": [[1.63774182E12, 21.733333333333334], [1.63774164E12, 22.883333333333333], [1.63774194E12, 0.1], [1.63774176E12, 22.916666666666668], [1.63774158E12, 21.616666666666667], [1.63774146E12, 12.233333333333333], [1.63774188E12, 13.516666666666667], [1.6377417E12, 23.266666666666666], [1.63774152E12, 21.733333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774194E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

